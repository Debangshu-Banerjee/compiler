Terminals unused in grammar

   PTR_OP
   DO
   LIBRARY
   ERROR
   AMP
   TILDE
   DOT
   MODULUS
   PIPE
   XOR
   QUES
   BOOL
   CHAR


Grammar

    0 $accept: program $end

    1 program: statement_list

    2 function_declaration: function_head first_curly statement_list last_curly

    3 first_curly: OPEN_CURLY

    4 last_curly: CLOSE_CURLY

    5 function_head: res_id OPEN_BRACKET parameter_list CLOSE_BRACKET

    6 res_id: type ID

    7 type: INT
    8     | FLOAT
    9     | VOID

   10 statement_list: statement_list M statement
   11               | %empty

   12 statement: variable_declaration SEMI
   13          | BREAK SEMI
   14          | CONTINUE SEMI
   15          | RETURN SEMI
   16          | RETURN conditional_expression SEMI
   17          | selection_statement
   18          | iteration_statement
   19          | assignment_statement SEMI
   20          | PRINT OPEN_BRACKET primary_expression CLOSE_BRACKET SEMI
   21          | first_curly statement_list last_curly
   22          | switch_statement
   23          | function_declaration

   24 selection_statement: ifexp statement ELSE N M statement
   25                    | ifexp statement

   26 switch_statement: SWITCH OPEN_BRACKET normal_expression CLOSE_BRACKET OPEN_CURLY case_list CLOSE_CURLY

   27 case_list: case_list_minor default_statement
   28          | case_list_minor

   29 case_list_minor: case_list_minor case_statement
   30                | case_statement

   31 default_statement: default_name statement

   32 default_name: DEFAULT COLON

   33 case_statement: case_name normal_expression COLON N_new M statement

   34 case_name: CASE

   35 ifexp: IF OPEN_BRACKET assignment_statement CLOSE_BRACKET

   36 iteration_statement: whileexp statement
   37                    | forexp M assignment_statement M M CLOSE_BRACKET statement

   38 whileexp: WHILE M OPEN_BRACKET assignment_statement CLOSE_BRACKET

   39 forexp: FOR OPEN_BRACKET assignment_statement SEMI M assignment_statement SEMI

   40 N_new: %empty

   41 M: %empty

   42 N: %empty

   43 conditional_expression: conditional_expression AND_OP expression
   44                       | conditional_expression OR_OP expression
   45                       | expression

   46 expression: rel_expression
   47           | normal_expression

   48 rel_expression: normal_expression GT normal_expression
   49               | normal_expression LT normal_expression
   50               | normal_expression GE_OP normal_expression
   51               | normal_expression LE_OP normal_expression
   52               | normal_expression EQ_OP normal_expression
   53               | normal_expression NE_OP normal_expression

   54 normal_expression: normal_expression PLUS term
   55                  | normal_expression MINUS term
   56                  | term

   57 term: term STAR factor
   58     | term DIVIDE factor
   59     | factor

   60 factor: unary_expression

   61 unary_expression: primary_expression
   62                 | MINUS unary_expression
   63                 | NOT unary_expression
   64                 | DEC_OP unary_expression
   65                 | INC_OP unary_expression

   66 primary_expression: NUM
   67                   | REAL
   68                   | id_arr
   69                   | OPEN_BRACKET conditional_expression CLOSE_BRACKET
   70                   | func_call

   71 elist: elist OPEN_SQUARE expression CLOSE_SQUARE
   72      | OPEN_SQUARE expression CLOSE_SQUARE

   73 func_call: ID OPEN_BRACKET elist_super CLOSE_BRACKET

   74 elist_super: elist_func_call
   75            | %empty

   76 elist_func_call: elist_func_call COMMA expression
   77                | expression

   78 assignment_statement: id_arr ASSIGN conditional_expression
   79                     | conditional_expression
   80                     | %empty

   81 variable_declaration: type varlist

   82 id_arr: ID
   83       | ID elist

   84 id_arr_declare: ID
   85               | ID new_num_list

   86 new_num_list: new_num_list OPEN_SQUARE NUM CLOSE_SQUARE
   87             | OPEN_SQUARE NUM CLOSE_SQUARE

   88 parameter_list: param_decl
   89               | %empty

   90 param_decl: param_decl COMMA unit_declaration
   91           | unit_declaration

   92 unit_declaration: type ID
   93                 | type ID OPEN_SQUARE CLOSE_SQUARE

   94 varlist: varlist COMMA id_arr_declare
   95        | id_arr_declare


Terminals, with rules where they appear

$end (0) 0
error (256)
ELSE (258) 24
FOR (259) 39
IF (260) 35
RETURN (261) 15 16
WHILE (262) 38
PTR_OP (263)
INC_OP (264) 65
DEC_OP (265) 64
AND_OP (266) 43
OR_OP (267) 44
LT (268) 49
GT (269) 48
LE_OP (270) 51
GE_OP (271) 50
EQ_OP (272) 52
NE_OP (273) 53
DO (274)
BREAK (275) 13
LIBRARY (276)
CONTINUE (277) 14
ERROR (278)
NOT (279) 63
AMP (280)
TILDE (281)
STAR (282) 57
ASSIGN (283) 78
OPEN_BRACKET (284) 5 20 26 35 38 39 69 73
CLOSE_BRACKET (285) 5 20 26 35 37 38 69 73
OPEN_CURLY (286) 3 26
CLOSE_CURLY (287) 4 26
OPEN_SQUARE (288) 71 72 86 87 93
CLOSE_SQUARE (289) 71 72 86 87 93
SEMI (290) 12 13 14 15 16 19 20 39
COMMA (291) 76 90 94
DOT (292)
PLUS (293) 54
MINUS (294) 55 62
DIVIDE (295) 58
MODULUS (296)
PIPE (297)
XOR (298)
QUES (299)
COLON (300) 32 33
SWITCH (301) 26
CASE (302) 34
DEFAULT (303) 32
PRINT (304) 20
ID (305) 6 73 82 83 84 85 92 93
BOOL (306)
CHAR (307)
INT (308) 7
FLOAT (309) 8
VOID (310) 9
NUM (311) 66 86 87
REAL (312) 67
"IFS" (313)
"IFX" (314)
UMINUS (315)


Nonterminals, with rules where they appear

$accept (61)
    on left: 0
program (62)
    on left: 1, on right: 0
function_declaration (63)
    on left: 2, on right: 23
first_curly (64)
    on left: 3, on right: 2 21
last_curly (65)
    on left: 4, on right: 2 21
function_head (66)
    on left: 5, on right: 2
res_id (67)
    on left: 6, on right: 5
type (68)
    on left: 7 8 9, on right: 6 81 92 93
statement_list (69)
    on left: 10 11, on right: 1 2 10 21
statement (70)
    on left: 12 13 14 15 16 17 18 19 20 21 22 23, on right: 10 24 25
    31 33 36 37
selection_statement (71)
    on left: 24 25, on right: 17
switch_statement (72)
    on left: 26, on right: 22
case_list (73)
    on left: 27 28, on right: 26
case_list_minor (74)
    on left: 29 30, on right: 27 28 29
default_statement (75)
    on left: 31, on right: 27
default_name (76)
    on left: 32, on right: 31
case_statement (77)
    on left: 33, on right: 29 30
case_name (78)
    on left: 34, on right: 33
ifexp (79)
    on left: 35, on right: 24 25
iteration_statement (80)
    on left: 36 37, on right: 18
whileexp (81)
    on left: 38, on right: 36
forexp (82)
    on left: 39, on right: 37
N_new (83)
    on left: 40, on right: 33
M (84)
    on left: 41, on right: 10 24 33 37 38 39
N (85)
    on left: 42, on right: 24
conditional_expression (86)
    on left: 43 44 45, on right: 16 43 44 69 78 79
expression (87)
    on left: 46 47, on right: 43 44 45 71 72 76 77
rel_expression (88)
    on left: 48 49 50 51 52 53, on right: 46
normal_expression (89)
    on left: 54 55 56, on right: 26 33 47 48 49 50 51 52 53 54 55
term (90)
    on left: 57 58 59, on right: 54 55 56 57 58
factor (91)
    on left: 60, on right: 57 58 59
unary_expression (92)
    on left: 61 62 63 64 65, on right: 60 62 63 64 65
primary_expression (93)
    on left: 66 67 68 69 70, on right: 20 61
elist (94)
    on left: 71 72, on right: 71 83
func_call (95)
    on left: 73, on right: 70
elist_super (96)
    on left: 74 75, on right: 73
elist_func_call (97)
    on left: 76 77, on right: 74 76
assignment_statement (98)
    on left: 78 79 80, on right: 19 35 37 38 39
variable_declaration (99)
    on left: 81, on right: 12
id_arr (100)
    on left: 82 83, on right: 68 78
id_arr_declare (101)
    on left: 84 85, on right: 94 95
new_num_list (102)
    on left: 86 87, on right: 85 86
parameter_list (103)
    on left: 88 89, on right: 5
param_decl (104)
    on left: 90 91, on right: 88 90
unit_declaration (105)
    on left: 92 93, on right: 90 91
varlist (106)
    on left: 94 95, on right: 81 94


State 0

    0 $accept: . program $end

    $default  reduce using rule 11 (statement_list)

    program         go to state 1
    statement_list  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: statement_list .
   10 statement_list: statement_list . M statement

    $end      reduce using rule 1 (program)
    $default  reduce using rule 41 (M)

    M  go to state 4


State 3

    0 $accept: program $end .

    $default  accept


State 4

   10 statement_list: statement_list M . statement

    FOR           shift, and go to state 5
    IF            shift, and go to state 6
    RETURN        shift, and go to state 7
    WHILE         shift, and go to state 8
    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    BREAK         shift, and go to state 11
    CONTINUE      shift, and go to state 12
    NOT           shift, and go to state 13
    OPEN_BRACKET  shift, and go to state 14
    OPEN_CURLY    shift, and go to state 15
    MINUS         shift, and go to state 16
    SWITCH        shift, and go to state 17
    PRINT         shift, and go to state 18
    ID            shift, and go to state 19
    INT           shift, and go to state 20
    FLOAT         shift, and go to state 21
    VOID          shift, and go to state 22
    NUM           shift, and go to state 23
    REAL          shift, and go to state 24

    $default  reduce using rule 80 (assignment_statement)

    function_declaration    go to state 25
    first_curly             go to state 26
    function_head           go to state 27
    res_id                  go to state 28
    type                    go to state 29
    statement               go to state 30
    selection_statement     go to state 31
    switch_statement        go to state 32
    ifexp                   go to state 33
    iteration_statement     go to state 34
    whileexp                go to state 35
    forexp                  go to state 36
    conditional_expression  go to state 37
    expression              go to state 38
    rel_expression          go to state 39
    normal_expression       go to state 40
    term                    go to state 41
    factor                  go to state 42
    unary_expression        go to state 43
    primary_expression      go to state 44
    func_call               go to state 45
    assignment_statement    go to state 46
    variable_declaration    go to state 47
    id_arr                  go to state 48


State 5

   39 forexp: FOR . OPEN_BRACKET assignment_statement SEMI M assignment_statement SEMI

    OPEN_BRACKET  shift, and go to state 49


State 6

   35 ifexp: IF . OPEN_BRACKET assignment_statement CLOSE_BRACKET

    OPEN_BRACKET  shift, and go to state 50


State 7

   15 statement: RETURN . SEMI
   16          | RETURN . conditional_expression SEMI

    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 13
    OPEN_BRACKET  shift, and go to state 14
    SEMI          shift, and go to state 51
    MINUS         shift, and go to state 16
    ID            shift, and go to state 19
    NUM           shift, and go to state 23
    REAL          shift, and go to state 24

    conditional_expression  go to state 52
    expression              go to state 38
    rel_expression          go to state 39
    normal_expression       go to state 40
    term                    go to state 41
    factor                  go to state 42
    unary_expression        go to state 43
    primary_expression      go to state 44
    func_call               go to state 45
    id_arr                  go to state 53


State 8

   38 whileexp: WHILE . M OPEN_BRACKET assignment_statement CLOSE_BRACKET

    $default  reduce using rule 41 (M)

    M  go to state 54


State 9

   65 unary_expression: INC_OP . unary_expression

    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 13
    OPEN_BRACKET  shift, and go to state 14
    MINUS         shift, and go to state 16
    ID            shift, and go to state 19
    NUM           shift, and go to state 23
    REAL          shift, and go to state 24

    unary_expression    go to state 55
    primary_expression  go to state 44
    func_call           go to state 45
    id_arr              go to state 53


State 10

   64 unary_expression: DEC_OP . unary_expression

    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 13
    OPEN_BRACKET  shift, and go to state 14
    MINUS         shift, and go to state 16
    ID            shift, and go to state 19
    NUM           shift, and go to state 23
    REAL          shift, and go to state 24

    unary_expression    go to state 56
    primary_expression  go to state 44
    func_call           go to state 45
    id_arr              go to state 53


State 11

   13 statement: BREAK . SEMI

    SEMI  shift, and go to state 57


State 12

   14 statement: CONTINUE . SEMI

    SEMI  shift, and go to state 58


State 13

   63 unary_expression: NOT . unary_expression

    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 13
    OPEN_BRACKET  shift, and go to state 14
    MINUS         shift, and go to state 16
    ID            shift, and go to state 19
    NUM           shift, and go to state 23
    REAL          shift, and go to state 24

    unary_expression    go to state 59
    primary_expression  go to state 44
    func_call           go to state 45
    id_arr              go to state 53


State 14

   69 primary_expression: OPEN_BRACKET . conditional_expression CLOSE_BRACKET

    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 13
    OPEN_BRACKET  shift, and go to state 14
    MINUS         shift, and go to state 16
    ID            shift, and go to state 19
    NUM           shift, and go to state 23
    REAL          shift, and go to state 24

    conditional_expression  go to state 60
    expression              go to state 38
    rel_expression          go to state 39
    normal_expression       go to state 40
    term                    go to state 41
    factor                  go to state 42
    unary_expression        go to state 43
    primary_expression      go to state 44
    func_call               go to state 45
    id_arr                  go to state 53


State 15

    3 first_curly: OPEN_CURLY .

    $default  reduce using rule 3 (first_curly)


State 16

   62 unary_expression: MINUS . unary_expression

    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 13
    OPEN_BRACKET  shift, and go to state 14
    MINUS         shift, and go to state 16
    ID            shift, and go to state 19
    NUM           shift, and go to state 23
    REAL          shift, and go to state 24

    unary_expression    go to state 61
    primary_expression  go to state 44
    func_call           go to state 45
    id_arr              go to state 53


State 17

   26 switch_statement: SWITCH . OPEN_BRACKET normal_expression CLOSE_BRACKET OPEN_CURLY case_list CLOSE_CURLY

    OPEN_BRACKET  shift, and go to state 62


State 18

   20 statement: PRINT . OPEN_BRACKET primary_expression CLOSE_BRACKET SEMI

    OPEN_BRACKET  shift, and go to state 63


State 19

   73 func_call: ID . OPEN_BRACKET elist_super CLOSE_BRACKET
   82 id_arr: ID .
   83       | ID . elist

    OPEN_BRACKET  shift, and go to state 64
    OPEN_SQUARE   shift, and go to state 65

    $default  reduce using rule 82 (id_arr)

    elist  go to state 66


State 20

    7 type: INT .

    $default  reduce using rule 7 (type)


State 21

    8 type: FLOAT .

    $default  reduce using rule 8 (type)


State 22

    9 type: VOID .

    $default  reduce using rule 9 (type)


State 23

   66 primary_expression: NUM .

    $default  reduce using rule 66 (primary_expression)


State 24

   67 primary_expression: REAL .

    $default  reduce using rule 67 (primary_expression)


State 25

   23 statement: function_declaration .

    $default  reduce using rule 23 (statement)


State 26

   21 statement: first_curly . statement_list last_curly

    $default  reduce using rule 11 (statement_list)

    statement_list  go to state 67


State 27

    2 function_declaration: function_head . first_curly statement_list last_curly

    OPEN_CURLY  shift, and go to state 15

    first_curly  go to state 68


State 28

    5 function_head: res_id . OPEN_BRACKET parameter_list CLOSE_BRACKET

    OPEN_BRACKET  shift, and go to state 69


State 29

    6 res_id: type . ID
   81 variable_declaration: type . varlist

    ID  shift, and go to state 70

    id_arr_declare  go to state 71
    varlist         go to state 72


State 30

   10 statement_list: statement_list M statement .

    $default  reduce using rule 10 (statement_list)


State 31

   17 statement: selection_statement .

    $default  reduce using rule 17 (statement)


State 32

   22 statement: switch_statement .

    $default  reduce using rule 22 (statement)


State 33

   24 selection_statement: ifexp . statement ELSE N M statement
   25                    | ifexp . statement

    FOR           shift, and go to state 5
    IF            shift, and go to state 6
    RETURN        shift, and go to state 7
    WHILE         shift, and go to state 8
    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    BREAK         shift, and go to state 11
    CONTINUE      shift, and go to state 12
    NOT           shift, and go to state 13
    OPEN_BRACKET  shift, and go to state 14
    OPEN_CURLY    shift, and go to state 15
    MINUS         shift, and go to state 16
    SWITCH        shift, and go to state 17
    PRINT         shift, and go to state 18
    ID            shift, and go to state 19
    INT           shift, and go to state 20
    FLOAT         shift, and go to state 21
    VOID          shift, and go to state 22
    NUM           shift, and go to state 23
    REAL          shift, and go to state 24

    $default  reduce using rule 80 (assignment_statement)

    function_declaration    go to state 25
    first_curly             go to state 26
    function_head           go to state 27
    res_id                  go to state 28
    type                    go to state 29
    statement               go to state 73
    selection_statement     go to state 31
    switch_statement        go to state 32
    ifexp                   go to state 33
    iteration_statement     go to state 34
    whileexp                go to state 35
    forexp                  go to state 36
    conditional_expression  go to state 37
    expression              go to state 38
    rel_expression          go to state 39
    normal_expression       go to state 40
    term                    go to state 41
    factor                  go to state 42
    unary_expression        go to state 43
    primary_expression      go to state 44
    func_call               go to state 45
    assignment_statement    go to state 46
    variable_declaration    go to state 47
    id_arr                  go to state 48


State 34

   18 statement: iteration_statement .

    $default  reduce using rule 18 (statement)


State 35

   36 iteration_statement: whileexp . statement

    FOR           shift, and go to state 5
    IF            shift, and go to state 6
    RETURN        shift, and go to state 7
    WHILE         shift, and go to state 8
    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    BREAK         shift, and go to state 11
    CONTINUE      shift, and go to state 12
    NOT           shift, and go to state 13
    OPEN_BRACKET  shift, and go to state 14
    OPEN_CURLY    shift, and go to state 15
    MINUS         shift, and go to state 16
    SWITCH        shift, and go to state 17
    PRINT         shift, and go to state 18
    ID            shift, and go to state 19
    INT           shift, and go to state 20
    FLOAT         shift, and go to state 21
    VOID          shift, and go to state 22
    NUM           shift, and go to state 23
    REAL          shift, and go to state 24

    $default  reduce using rule 80 (assignment_statement)

    function_declaration    go to state 25
    first_curly             go to state 26
    function_head           go to state 27
    res_id                  go to state 28
    type                    go to state 29
    statement               go to state 74
    selection_statement     go to state 31
    switch_statement        go to state 32
    ifexp                   go to state 33
    iteration_statement     go to state 34
    whileexp                go to state 35
    forexp                  go to state 36
    conditional_expression  go to state 37
    expression              go to state 38
    rel_expression          go to state 39
    normal_expression       go to state 40
    term                    go to state 41
    factor                  go to state 42
    unary_expression        go to state 43
    primary_expression      go to state 44
    func_call               go to state 45
    assignment_statement    go to state 46
    variable_declaration    go to state 47
    id_arr                  go to state 48


State 36

   37 iteration_statement: forexp . M assignment_statement M M CLOSE_BRACKET statement

    $default  reduce using rule 41 (M)

    M  go to state 75


State 37

   43 conditional_expression: conditional_expression . AND_OP expression
   44                       | conditional_expression . OR_OP expression
   79 assignment_statement: conditional_expression .

    AND_OP  shift, and go to state 76
    OR_OP   shift, and go to state 77

    $default  reduce using rule 79 (assignment_statement)


State 38

   45 conditional_expression: expression .

    $default  reduce using rule 45 (conditional_expression)


State 39

   46 expression: rel_expression .

    $default  reduce using rule 46 (expression)


State 40

   47 expression: normal_expression .
   48 rel_expression: normal_expression . GT normal_expression
   49               | normal_expression . LT normal_expression
   50               | normal_expression . GE_OP normal_expression
   51               | normal_expression . LE_OP normal_expression
   52               | normal_expression . EQ_OP normal_expression
   53               | normal_expression . NE_OP normal_expression
   54 normal_expression: normal_expression . PLUS term
   55                  | normal_expression . MINUS term

    LT     shift, and go to state 78
    GT     shift, and go to state 79
    LE_OP  shift, and go to state 80
    GE_OP  shift, and go to state 81
    EQ_OP  shift, and go to state 82
    NE_OP  shift, and go to state 83
    PLUS   shift, and go to state 84
    MINUS  shift, and go to state 85

    $default  reduce using rule 47 (expression)


State 41

   56 normal_expression: term .
   57 term: term . STAR factor
   58     | term . DIVIDE factor

    STAR    shift, and go to state 86
    DIVIDE  shift, and go to state 87

    $default  reduce using rule 56 (normal_expression)


State 42

   59 term: factor .

    $default  reduce using rule 59 (term)


State 43

   60 factor: unary_expression .

    $default  reduce using rule 60 (factor)


State 44

   61 unary_expression: primary_expression .

    $default  reduce using rule 61 (unary_expression)


State 45

   70 primary_expression: func_call .

    $default  reduce using rule 70 (primary_expression)


State 46

   19 statement: assignment_statement . SEMI

    SEMI  shift, and go to state 88


State 47

   12 statement: variable_declaration . SEMI

    SEMI  shift, and go to state 89


State 48

   68 primary_expression: id_arr .
   78 assignment_statement: id_arr . ASSIGN conditional_expression

    ASSIGN  shift, and go to state 90

    $default  reduce using rule 68 (primary_expression)


State 49

   39 forexp: FOR OPEN_BRACKET . assignment_statement SEMI M assignment_statement SEMI

    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 13
    OPEN_BRACKET  shift, and go to state 14
    MINUS         shift, and go to state 16
    ID            shift, and go to state 19
    NUM           shift, and go to state 23
    REAL          shift, and go to state 24

    $default  reduce using rule 80 (assignment_statement)

    conditional_expression  go to state 37
    expression              go to state 38
    rel_expression          go to state 39
    normal_expression       go to state 40
    term                    go to state 41
    factor                  go to state 42
    unary_expression        go to state 43
    primary_expression      go to state 44
    func_call               go to state 45
    assignment_statement    go to state 91
    id_arr                  go to state 48


State 50

   35 ifexp: IF OPEN_BRACKET . assignment_statement CLOSE_BRACKET

    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 13
    OPEN_BRACKET  shift, and go to state 14
    MINUS         shift, and go to state 16
    ID            shift, and go to state 19
    NUM           shift, and go to state 23
    REAL          shift, and go to state 24

    $default  reduce using rule 80 (assignment_statement)

    conditional_expression  go to state 37
    expression              go to state 38
    rel_expression          go to state 39
    normal_expression       go to state 40
    term                    go to state 41
    factor                  go to state 42
    unary_expression        go to state 43
    primary_expression      go to state 44
    func_call               go to state 45
    assignment_statement    go to state 92
    id_arr                  go to state 48


State 51

   15 statement: RETURN SEMI .

    $default  reduce using rule 15 (statement)


State 52

   16 statement: RETURN conditional_expression . SEMI
   43 conditional_expression: conditional_expression . AND_OP expression
   44                       | conditional_expression . OR_OP expression

    AND_OP  shift, and go to state 76
    OR_OP   shift, and go to state 77
    SEMI    shift, and go to state 93


State 53

   68 primary_expression: id_arr .

    $default  reduce using rule 68 (primary_expression)


State 54

   38 whileexp: WHILE M . OPEN_BRACKET assignment_statement CLOSE_BRACKET

    OPEN_BRACKET  shift, and go to state 94


State 55

   65 unary_expression: INC_OP unary_expression .

    $default  reduce using rule 65 (unary_expression)


State 56

   64 unary_expression: DEC_OP unary_expression .

    $default  reduce using rule 64 (unary_expression)


State 57

   13 statement: BREAK SEMI .

    $default  reduce using rule 13 (statement)


State 58

   14 statement: CONTINUE SEMI .

    $default  reduce using rule 14 (statement)


State 59

   63 unary_expression: NOT unary_expression .

    $default  reduce using rule 63 (unary_expression)


State 60

   43 conditional_expression: conditional_expression . AND_OP expression
   44                       | conditional_expression . OR_OP expression
   69 primary_expression: OPEN_BRACKET conditional_expression . CLOSE_BRACKET

    AND_OP         shift, and go to state 76
    OR_OP          shift, and go to state 77
    CLOSE_BRACKET  shift, and go to state 95


State 61

   62 unary_expression: MINUS unary_expression .

    $default  reduce using rule 62 (unary_expression)


State 62

   26 switch_statement: SWITCH OPEN_BRACKET . normal_expression CLOSE_BRACKET OPEN_CURLY case_list CLOSE_CURLY

    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 13
    OPEN_BRACKET  shift, and go to state 14
    MINUS         shift, and go to state 16
    ID            shift, and go to state 19
    NUM           shift, and go to state 23
    REAL          shift, and go to state 24

    normal_expression   go to state 96
    term                go to state 41
    factor              go to state 42
    unary_expression    go to state 43
    primary_expression  go to state 44
    func_call           go to state 45
    id_arr              go to state 53


State 63

   20 statement: PRINT OPEN_BRACKET . primary_expression CLOSE_BRACKET SEMI

    OPEN_BRACKET  shift, and go to state 14
    ID            shift, and go to state 19
    NUM           shift, and go to state 23
    REAL          shift, and go to state 24

    primary_expression  go to state 97
    func_call           go to state 45
    id_arr              go to state 53


State 64

   73 func_call: ID OPEN_BRACKET . elist_super CLOSE_BRACKET

    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 13
    OPEN_BRACKET  shift, and go to state 14
    MINUS         shift, and go to state 16
    ID            shift, and go to state 19
    NUM           shift, and go to state 23
    REAL          shift, and go to state 24

    $default  reduce using rule 75 (elist_super)

    expression          go to state 98
    rel_expression      go to state 39
    normal_expression   go to state 40
    term                go to state 41
    factor              go to state 42
    unary_expression    go to state 43
    primary_expression  go to state 44
    func_call           go to state 45
    elist_super         go to state 99
    elist_func_call     go to state 100
    id_arr              go to state 53


State 65

   72 elist: OPEN_SQUARE . expression CLOSE_SQUARE

    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 13
    OPEN_BRACKET  shift, and go to state 14
    MINUS         shift, and go to state 16
    ID            shift, and go to state 19
    NUM           shift, and go to state 23
    REAL          shift, and go to state 24

    expression          go to state 101
    rel_expression      go to state 39
    normal_expression   go to state 40
    term                go to state 41
    factor              go to state 42
    unary_expression    go to state 43
    primary_expression  go to state 44
    func_call           go to state 45
    id_arr              go to state 53


State 66

   71 elist: elist . OPEN_SQUARE expression CLOSE_SQUARE
   83 id_arr: ID elist .

    OPEN_SQUARE  shift, and go to state 102

    $default  reduce using rule 83 (id_arr)


State 67

   10 statement_list: statement_list . M statement
   21 statement: first_curly statement_list . last_curly

    CLOSE_CURLY  shift, and go to state 103

    $default  reduce using rule 41 (M)

    last_curly  go to state 104
    M           go to state 4


State 68

    2 function_declaration: function_head first_curly . statement_list last_curly

    $default  reduce using rule 11 (statement_list)

    statement_list  go to state 105


State 69

    5 function_head: res_id OPEN_BRACKET . parameter_list CLOSE_BRACKET

    INT    shift, and go to state 20
    FLOAT  shift, and go to state 21
    VOID   shift, and go to state 22

    $default  reduce using rule 89 (parameter_list)

    type              go to state 106
    parameter_list    go to state 107
    param_decl        go to state 108
    unit_declaration  go to state 109


State 70

    6 res_id: type ID .
   84 id_arr_declare: ID .
   85               | ID . new_num_list

    OPEN_SQUARE  shift, and go to state 110

    OPEN_BRACKET  reduce using rule 6 (res_id)
    $default      reduce using rule 84 (id_arr_declare)

    new_num_list  go to state 111


State 71

   95 varlist: id_arr_declare .

    $default  reduce using rule 95 (varlist)


State 72

   81 variable_declaration: type varlist .
   94 varlist: varlist . COMMA id_arr_declare

    COMMA  shift, and go to state 112

    $default  reduce using rule 81 (variable_declaration)


State 73

   24 selection_statement: ifexp statement . ELSE N M statement
   25                    | ifexp statement .

    ELSE  shift, and go to state 113

    $default  reduce using rule 25 (selection_statement)


State 74

   36 iteration_statement: whileexp statement .

    $default  reduce using rule 36 (iteration_statement)


State 75

   37 iteration_statement: forexp M . assignment_statement M M CLOSE_BRACKET statement

    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 13
    OPEN_BRACKET  shift, and go to state 14
    MINUS         shift, and go to state 16
    ID            shift, and go to state 19
    NUM           shift, and go to state 23
    REAL          shift, and go to state 24

    $default  reduce using rule 80 (assignment_statement)

    conditional_expression  go to state 37
    expression              go to state 38
    rel_expression          go to state 39
    normal_expression       go to state 40
    term                    go to state 41
    factor                  go to state 42
    unary_expression        go to state 43
    primary_expression      go to state 44
    func_call               go to state 45
    assignment_statement    go to state 114
    id_arr                  go to state 48


State 76

   43 conditional_expression: conditional_expression AND_OP . expression

    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 13
    OPEN_BRACKET  shift, and go to state 14
    MINUS         shift, and go to state 16
    ID            shift, and go to state 19
    NUM           shift, and go to state 23
    REAL          shift, and go to state 24

    expression          go to state 115
    rel_expression      go to state 39
    normal_expression   go to state 40
    term                go to state 41
    factor              go to state 42
    unary_expression    go to state 43
    primary_expression  go to state 44
    func_call           go to state 45
    id_arr              go to state 53


State 77

   44 conditional_expression: conditional_expression OR_OP . expression

    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 13
    OPEN_BRACKET  shift, and go to state 14
    MINUS         shift, and go to state 16
    ID            shift, and go to state 19
    NUM           shift, and go to state 23
    REAL          shift, and go to state 24

    expression          go to state 116
    rel_expression      go to state 39
    normal_expression   go to state 40
    term                go to state 41
    factor              go to state 42
    unary_expression    go to state 43
    primary_expression  go to state 44
    func_call           go to state 45
    id_arr              go to state 53


State 78

   49 rel_expression: normal_expression LT . normal_expression

    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 13
    OPEN_BRACKET  shift, and go to state 14
    MINUS         shift, and go to state 16
    ID            shift, and go to state 19
    NUM           shift, and go to state 23
    REAL          shift, and go to state 24

    normal_expression   go to state 117
    term                go to state 41
    factor              go to state 42
    unary_expression    go to state 43
    primary_expression  go to state 44
    func_call           go to state 45
    id_arr              go to state 53


State 79

   48 rel_expression: normal_expression GT . normal_expression

    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 13
    OPEN_BRACKET  shift, and go to state 14
    MINUS         shift, and go to state 16
    ID            shift, and go to state 19
    NUM           shift, and go to state 23
    REAL          shift, and go to state 24

    normal_expression   go to state 118
    term                go to state 41
    factor              go to state 42
    unary_expression    go to state 43
    primary_expression  go to state 44
    func_call           go to state 45
    id_arr              go to state 53


State 80

   51 rel_expression: normal_expression LE_OP . normal_expression

    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 13
    OPEN_BRACKET  shift, and go to state 14
    MINUS         shift, and go to state 16
    ID            shift, and go to state 19
    NUM           shift, and go to state 23
    REAL          shift, and go to state 24

    normal_expression   go to state 119
    term                go to state 41
    factor              go to state 42
    unary_expression    go to state 43
    primary_expression  go to state 44
    func_call           go to state 45
    id_arr              go to state 53


State 81

   50 rel_expression: normal_expression GE_OP . normal_expression

    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 13
    OPEN_BRACKET  shift, and go to state 14
    MINUS         shift, and go to state 16
    ID            shift, and go to state 19
    NUM           shift, and go to state 23
    REAL          shift, and go to state 24

    normal_expression   go to state 120
    term                go to state 41
    factor              go to state 42
    unary_expression    go to state 43
    primary_expression  go to state 44
    func_call           go to state 45
    id_arr              go to state 53


State 82

   52 rel_expression: normal_expression EQ_OP . normal_expression

    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 13
    OPEN_BRACKET  shift, and go to state 14
    MINUS         shift, and go to state 16
    ID            shift, and go to state 19
    NUM           shift, and go to state 23
    REAL          shift, and go to state 24

    normal_expression   go to state 121
    term                go to state 41
    factor              go to state 42
    unary_expression    go to state 43
    primary_expression  go to state 44
    func_call           go to state 45
    id_arr              go to state 53


State 83

   53 rel_expression: normal_expression NE_OP . normal_expression

    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 13
    OPEN_BRACKET  shift, and go to state 14
    MINUS         shift, and go to state 16
    ID            shift, and go to state 19
    NUM           shift, and go to state 23
    REAL          shift, and go to state 24

    normal_expression   go to state 122
    term                go to state 41
    factor              go to state 42
    unary_expression    go to state 43
    primary_expression  go to state 44
    func_call           go to state 45
    id_arr              go to state 53


State 84

   54 normal_expression: normal_expression PLUS . term

    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 13
    OPEN_BRACKET  shift, and go to state 14
    MINUS         shift, and go to state 16
    ID            shift, and go to state 19
    NUM           shift, and go to state 23
    REAL          shift, and go to state 24

    term                go to state 123
    factor              go to state 42
    unary_expression    go to state 43
    primary_expression  go to state 44
    func_call           go to state 45
    id_arr              go to state 53


State 85

   55 normal_expression: normal_expression MINUS . term

    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 13
    OPEN_BRACKET  shift, and go to state 14
    MINUS         shift, and go to state 16
    ID            shift, and go to state 19
    NUM           shift, and go to state 23
    REAL          shift, and go to state 24

    term                go to state 124
    factor              go to state 42
    unary_expression    go to state 43
    primary_expression  go to state 44
    func_call           go to state 45
    id_arr              go to state 53


State 86

   57 term: term STAR . factor

    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 13
    OPEN_BRACKET  shift, and go to state 14
    MINUS         shift, and go to state 16
    ID            shift, and go to state 19
    NUM           shift, and go to state 23
    REAL          shift, and go to state 24

    factor              go to state 125
    unary_expression    go to state 43
    primary_expression  go to state 44
    func_call           go to state 45
    id_arr              go to state 53


State 87

   58 term: term DIVIDE . factor

    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 13
    OPEN_BRACKET  shift, and go to state 14
    MINUS         shift, and go to state 16
    ID            shift, and go to state 19
    NUM           shift, and go to state 23
    REAL          shift, and go to state 24

    factor              go to state 126
    unary_expression    go to state 43
    primary_expression  go to state 44
    func_call           go to state 45
    id_arr              go to state 53


State 88

   19 statement: assignment_statement SEMI .

    $default  reduce using rule 19 (statement)


State 89

   12 statement: variable_declaration SEMI .

    $default  reduce using rule 12 (statement)


State 90

   78 assignment_statement: id_arr ASSIGN . conditional_expression

    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 13
    OPEN_BRACKET  shift, and go to state 14
    MINUS         shift, and go to state 16
    ID            shift, and go to state 19
    NUM           shift, and go to state 23
    REAL          shift, and go to state 24

    conditional_expression  go to state 127
    expression              go to state 38
    rel_expression          go to state 39
    normal_expression       go to state 40
    term                    go to state 41
    factor                  go to state 42
    unary_expression        go to state 43
    primary_expression      go to state 44
    func_call               go to state 45
    id_arr                  go to state 53


State 91

   39 forexp: FOR OPEN_BRACKET assignment_statement . SEMI M assignment_statement SEMI

    SEMI  shift, and go to state 128


State 92

   35 ifexp: IF OPEN_BRACKET assignment_statement . CLOSE_BRACKET

    CLOSE_BRACKET  shift, and go to state 129


State 93

   16 statement: RETURN conditional_expression SEMI .

    $default  reduce using rule 16 (statement)


State 94

   38 whileexp: WHILE M OPEN_BRACKET . assignment_statement CLOSE_BRACKET

    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 13
    OPEN_BRACKET  shift, and go to state 14
    MINUS         shift, and go to state 16
    ID            shift, and go to state 19
    NUM           shift, and go to state 23
    REAL          shift, and go to state 24

    $default  reduce using rule 80 (assignment_statement)

    conditional_expression  go to state 37
    expression              go to state 38
    rel_expression          go to state 39
    normal_expression       go to state 40
    term                    go to state 41
    factor                  go to state 42
    unary_expression        go to state 43
    primary_expression      go to state 44
    func_call               go to state 45
    assignment_statement    go to state 130
    id_arr                  go to state 48


State 95

   69 primary_expression: OPEN_BRACKET conditional_expression CLOSE_BRACKET .

    $default  reduce using rule 69 (primary_expression)


State 96

   26 switch_statement: SWITCH OPEN_BRACKET normal_expression . CLOSE_BRACKET OPEN_CURLY case_list CLOSE_CURLY
   54 normal_expression: normal_expression . PLUS term
   55                  | normal_expression . MINUS term

    CLOSE_BRACKET  shift, and go to state 131
    PLUS           shift, and go to state 84
    MINUS          shift, and go to state 85


State 97

   20 statement: PRINT OPEN_BRACKET primary_expression . CLOSE_BRACKET SEMI

    CLOSE_BRACKET  shift, and go to state 132


State 98

   77 elist_func_call: expression .

    $default  reduce using rule 77 (elist_func_call)


State 99

   73 func_call: ID OPEN_BRACKET elist_super . CLOSE_BRACKET

    CLOSE_BRACKET  shift, and go to state 133


State 100

   74 elist_super: elist_func_call .
   76 elist_func_call: elist_func_call . COMMA expression

    COMMA  shift, and go to state 134

    $default  reduce using rule 74 (elist_super)


State 101

   72 elist: OPEN_SQUARE expression . CLOSE_SQUARE

    CLOSE_SQUARE  shift, and go to state 135


State 102

   71 elist: elist OPEN_SQUARE . expression CLOSE_SQUARE

    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 13
    OPEN_BRACKET  shift, and go to state 14
    MINUS         shift, and go to state 16
    ID            shift, and go to state 19
    NUM           shift, and go to state 23
    REAL          shift, and go to state 24

    expression          go to state 136
    rel_expression      go to state 39
    normal_expression   go to state 40
    term                go to state 41
    factor              go to state 42
    unary_expression    go to state 43
    primary_expression  go to state 44
    func_call           go to state 45
    id_arr              go to state 53


State 103

    4 last_curly: CLOSE_CURLY .

    $default  reduce using rule 4 (last_curly)


State 104

   21 statement: first_curly statement_list last_curly .

    $default  reduce using rule 21 (statement)


State 105

    2 function_declaration: function_head first_curly statement_list . last_curly
   10 statement_list: statement_list . M statement

    CLOSE_CURLY  shift, and go to state 103

    $default  reduce using rule 41 (M)

    last_curly  go to state 137
    M           go to state 4


State 106

   92 unit_declaration: type . ID
   93                 | type . ID OPEN_SQUARE CLOSE_SQUARE

    ID  shift, and go to state 138


State 107

    5 function_head: res_id OPEN_BRACKET parameter_list . CLOSE_BRACKET

    CLOSE_BRACKET  shift, and go to state 139


State 108

   88 parameter_list: param_decl .
   90 param_decl: param_decl . COMMA unit_declaration

    COMMA  shift, and go to state 140

    $default  reduce using rule 88 (parameter_list)


State 109

   91 param_decl: unit_declaration .

    $default  reduce using rule 91 (param_decl)


State 110

   87 new_num_list: OPEN_SQUARE . NUM CLOSE_SQUARE

    NUM  shift, and go to state 141


State 111

   85 id_arr_declare: ID new_num_list .
   86 new_num_list: new_num_list . OPEN_SQUARE NUM CLOSE_SQUARE

    OPEN_SQUARE  shift, and go to state 142

    $default  reduce using rule 85 (id_arr_declare)


State 112

   94 varlist: varlist COMMA . id_arr_declare

    ID  shift, and go to state 143

    id_arr_declare  go to state 144


State 113

   24 selection_statement: ifexp statement ELSE . N M statement

    $default  reduce using rule 42 (N)

    N  go to state 145


State 114

   37 iteration_statement: forexp M assignment_statement . M M CLOSE_BRACKET statement

    $default  reduce using rule 41 (M)

    M  go to state 146


State 115

   43 conditional_expression: conditional_expression AND_OP expression .

    $default  reduce using rule 43 (conditional_expression)


State 116

   44 conditional_expression: conditional_expression OR_OP expression .

    $default  reduce using rule 44 (conditional_expression)


State 117

   49 rel_expression: normal_expression LT normal_expression .
   54 normal_expression: normal_expression . PLUS term
   55                  | normal_expression . MINUS term

    PLUS   shift, and go to state 84
    MINUS  shift, and go to state 85

    $default  reduce using rule 49 (rel_expression)


State 118

   48 rel_expression: normal_expression GT normal_expression .
   54 normal_expression: normal_expression . PLUS term
   55                  | normal_expression . MINUS term

    PLUS   shift, and go to state 84
    MINUS  shift, and go to state 85

    $default  reduce using rule 48 (rel_expression)


State 119

   51 rel_expression: normal_expression LE_OP normal_expression .
   54 normal_expression: normal_expression . PLUS term
   55                  | normal_expression . MINUS term

    PLUS   shift, and go to state 84
    MINUS  shift, and go to state 85

    $default  reduce using rule 51 (rel_expression)


State 120

   50 rel_expression: normal_expression GE_OP normal_expression .
   54 normal_expression: normal_expression . PLUS term
   55                  | normal_expression . MINUS term

    PLUS   shift, and go to state 84
    MINUS  shift, and go to state 85

    $default  reduce using rule 50 (rel_expression)


State 121

   52 rel_expression: normal_expression EQ_OP normal_expression .
   54 normal_expression: normal_expression . PLUS term
   55                  | normal_expression . MINUS term

    PLUS   shift, and go to state 84
    MINUS  shift, and go to state 85

    $default  reduce using rule 52 (rel_expression)


State 122

   53 rel_expression: normal_expression NE_OP normal_expression .
   54 normal_expression: normal_expression . PLUS term
   55                  | normal_expression . MINUS term

    PLUS   shift, and go to state 84
    MINUS  shift, and go to state 85

    $default  reduce using rule 53 (rel_expression)


State 123

   54 normal_expression: normal_expression PLUS term .
   57 term: term . STAR factor
   58     | term . DIVIDE factor

    STAR    shift, and go to state 86
    DIVIDE  shift, and go to state 87

    $default  reduce using rule 54 (normal_expression)


State 124

   55 normal_expression: normal_expression MINUS term .
   57 term: term . STAR factor
   58     | term . DIVIDE factor

    STAR    shift, and go to state 86
    DIVIDE  shift, and go to state 87

    $default  reduce using rule 55 (normal_expression)


State 125

   57 term: term STAR factor .

    $default  reduce using rule 57 (term)


State 126

   58 term: term DIVIDE factor .

    $default  reduce using rule 58 (term)


State 127

   43 conditional_expression: conditional_expression . AND_OP expression
   44                       | conditional_expression . OR_OP expression
   78 assignment_statement: id_arr ASSIGN conditional_expression .

    AND_OP  shift, and go to state 76
    OR_OP   shift, and go to state 77

    $default  reduce using rule 78 (assignment_statement)


State 128

   39 forexp: FOR OPEN_BRACKET assignment_statement SEMI . M assignment_statement SEMI

    $default  reduce using rule 41 (M)

    M  go to state 147


State 129

   35 ifexp: IF OPEN_BRACKET assignment_statement CLOSE_BRACKET .

    $default  reduce using rule 35 (ifexp)


State 130

   38 whileexp: WHILE M OPEN_BRACKET assignment_statement . CLOSE_BRACKET

    CLOSE_BRACKET  shift, and go to state 148


State 131

   26 switch_statement: SWITCH OPEN_BRACKET normal_expression CLOSE_BRACKET . OPEN_CURLY case_list CLOSE_CURLY

    OPEN_CURLY  shift, and go to state 149


State 132

   20 statement: PRINT OPEN_BRACKET primary_expression CLOSE_BRACKET . SEMI

    SEMI  shift, and go to state 150


State 133

   73 func_call: ID OPEN_BRACKET elist_super CLOSE_BRACKET .

    $default  reduce using rule 73 (func_call)


State 134

   76 elist_func_call: elist_func_call COMMA . expression

    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 13
    OPEN_BRACKET  shift, and go to state 14
    MINUS         shift, and go to state 16
    ID            shift, and go to state 19
    NUM           shift, and go to state 23
    REAL          shift, and go to state 24

    expression          go to state 151
    rel_expression      go to state 39
    normal_expression   go to state 40
    term                go to state 41
    factor              go to state 42
    unary_expression    go to state 43
    primary_expression  go to state 44
    func_call           go to state 45
    id_arr              go to state 53


State 135

   72 elist: OPEN_SQUARE expression CLOSE_SQUARE .

    $default  reduce using rule 72 (elist)


State 136

   71 elist: elist OPEN_SQUARE expression . CLOSE_SQUARE

    CLOSE_SQUARE  shift, and go to state 152


State 137

    2 function_declaration: function_head first_curly statement_list last_curly .

    $default  reduce using rule 2 (function_declaration)


State 138

   92 unit_declaration: type ID .
   93                 | type ID . OPEN_SQUARE CLOSE_SQUARE

    OPEN_SQUARE  shift, and go to state 153

    $default  reduce using rule 92 (unit_declaration)


State 139

    5 function_head: res_id OPEN_BRACKET parameter_list CLOSE_BRACKET .

    $default  reduce using rule 5 (function_head)


State 140

   90 param_decl: param_decl COMMA . unit_declaration

    INT    shift, and go to state 20
    FLOAT  shift, and go to state 21
    VOID   shift, and go to state 22

    type              go to state 106
    unit_declaration  go to state 154


State 141

   87 new_num_list: OPEN_SQUARE NUM . CLOSE_SQUARE

    CLOSE_SQUARE  shift, and go to state 155


State 142

   86 new_num_list: new_num_list OPEN_SQUARE . NUM CLOSE_SQUARE

    NUM  shift, and go to state 156


State 143

   84 id_arr_declare: ID .
   85               | ID . new_num_list

    OPEN_SQUARE  shift, and go to state 110

    $default  reduce using rule 84 (id_arr_declare)

    new_num_list  go to state 111


State 144

   94 varlist: varlist COMMA id_arr_declare .

    $default  reduce using rule 94 (varlist)


State 145

   24 selection_statement: ifexp statement ELSE N . M statement

    $default  reduce using rule 41 (M)

    M  go to state 157


State 146

   37 iteration_statement: forexp M assignment_statement M . M CLOSE_BRACKET statement

    $default  reduce using rule 41 (M)

    M  go to state 158


State 147

   39 forexp: FOR OPEN_BRACKET assignment_statement SEMI M . assignment_statement SEMI

    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 13
    OPEN_BRACKET  shift, and go to state 14
    MINUS         shift, and go to state 16
    ID            shift, and go to state 19
    NUM           shift, and go to state 23
    REAL          shift, and go to state 24

    $default  reduce using rule 80 (assignment_statement)

    conditional_expression  go to state 37
    expression              go to state 38
    rel_expression          go to state 39
    normal_expression       go to state 40
    term                    go to state 41
    factor                  go to state 42
    unary_expression        go to state 43
    primary_expression      go to state 44
    func_call               go to state 45
    assignment_statement    go to state 159
    id_arr                  go to state 48


State 148

   38 whileexp: WHILE M OPEN_BRACKET assignment_statement CLOSE_BRACKET .

    $default  reduce using rule 38 (whileexp)


State 149

   26 switch_statement: SWITCH OPEN_BRACKET normal_expression CLOSE_BRACKET OPEN_CURLY . case_list CLOSE_CURLY

    CASE  shift, and go to state 160

    case_list        go to state 161
    case_list_minor  go to state 162
    case_statement   go to state 163
    case_name        go to state 164


State 150

   20 statement: PRINT OPEN_BRACKET primary_expression CLOSE_BRACKET SEMI .

    $default  reduce using rule 20 (statement)


State 151

   76 elist_func_call: elist_func_call COMMA expression .

    $default  reduce using rule 76 (elist_func_call)


State 152

   71 elist: elist OPEN_SQUARE expression CLOSE_SQUARE .

    $default  reduce using rule 71 (elist)


State 153

   93 unit_declaration: type ID OPEN_SQUARE . CLOSE_SQUARE

    CLOSE_SQUARE  shift, and go to state 165


State 154

   90 param_decl: param_decl COMMA unit_declaration .

    $default  reduce using rule 90 (param_decl)


State 155

   87 new_num_list: OPEN_SQUARE NUM CLOSE_SQUARE .

    $default  reduce using rule 87 (new_num_list)


State 156

   86 new_num_list: new_num_list OPEN_SQUARE NUM . CLOSE_SQUARE

    CLOSE_SQUARE  shift, and go to state 166


State 157

   24 selection_statement: ifexp statement ELSE N M . statement

    FOR           shift, and go to state 5
    IF            shift, and go to state 6
    RETURN        shift, and go to state 7
    WHILE         shift, and go to state 8
    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    BREAK         shift, and go to state 11
    CONTINUE      shift, and go to state 12
    NOT           shift, and go to state 13
    OPEN_BRACKET  shift, and go to state 14
    OPEN_CURLY    shift, and go to state 15
    MINUS         shift, and go to state 16
    SWITCH        shift, and go to state 17
    PRINT         shift, and go to state 18
    ID            shift, and go to state 19
    INT           shift, and go to state 20
    FLOAT         shift, and go to state 21
    VOID          shift, and go to state 22
    NUM           shift, and go to state 23
    REAL          shift, and go to state 24

    $default  reduce using rule 80 (assignment_statement)

    function_declaration    go to state 25
    first_curly             go to state 26
    function_head           go to state 27
    res_id                  go to state 28
    type                    go to state 29
    statement               go to state 167
    selection_statement     go to state 31
    switch_statement        go to state 32
    ifexp                   go to state 33
    iteration_statement     go to state 34
    whileexp                go to state 35
    forexp                  go to state 36
    conditional_expression  go to state 37
    expression              go to state 38
    rel_expression          go to state 39
    normal_expression       go to state 40
    term                    go to state 41
    factor                  go to state 42
    unary_expression        go to state 43
    primary_expression      go to state 44
    func_call               go to state 45
    assignment_statement    go to state 46
    variable_declaration    go to state 47
    id_arr                  go to state 48


State 158

   37 iteration_statement: forexp M assignment_statement M M . CLOSE_BRACKET statement

    CLOSE_BRACKET  shift, and go to state 168


State 159

   39 forexp: FOR OPEN_BRACKET assignment_statement SEMI M assignment_statement . SEMI

    SEMI  shift, and go to state 169


State 160

   34 case_name: CASE .

    $default  reduce using rule 34 (case_name)


State 161

   26 switch_statement: SWITCH OPEN_BRACKET normal_expression CLOSE_BRACKET OPEN_CURLY case_list . CLOSE_CURLY

    CLOSE_CURLY  shift, and go to state 170


State 162

   27 case_list: case_list_minor . default_statement
   28          | case_list_minor .
   29 case_list_minor: case_list_minor . case_statement

    CASE     shift, and go to state 160
    DEFAULT  shift, and go to state 171

    $default  reduce using rule 28 (case_list)

    default_statement  go to state 172
    default_name       go to state 173
    case_statement     go to state 174
    case_name          go to state 164


State 163

   30 case_list_minor: case_statement .

    $default  reduce using rule 30 (case_list_minor)


State 164

   33 case_statement: case_name . normal_expression COLON N_new M statement

    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 13
    OPEN_BRACKET  shift, and go to state 14
    MINUS         shift, and go to state 16
    ID            shift, and go to state 19
    NUM           shift, and go to state 23
    REAL          shift, and go to state 24

    normal_expression   go to state 175
    term                go to state 41
    factor              go to state 42
    unary_expression    go to state 43
    primary_expression  go to state 44
    func_call           go to state 45
    id_arr              go to state 53


State 165

   93 unit_declaration: type ID OPEN_SQUARE CLOSE_SQUARE .

    $default  reduce using rule 93 (unit_declaration)


State 166

   86 new_num_list: new_num_list OPEN_SQUARE NUM CLOSE_SQUARE .

    $default  reduce using rule 86 (new_num_list)


State 167

   24 selection_statement: ifexp statement ELSE N M statement .

    $default  reduce using rule 24 (selection_statement)


State 168

   37 iteration_statement: forexp M assignment_statement M M CLOSE_BRACKET . statement

    FOR           shift, and go to state 5
    IF            shift, and go to state 6
    RETURN        shift, and go to state 7
    WHILE         shift, and go to state 8
    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    BREAK         shift, and go to state 11
    CONTINUE      shift, and go to state 12
    NOT           shift, and go to state 13
    OPEN_BRACKET  shift, and go to state 14
    OPEN_CURLY    shift, and go to state 15
    MINUS         shift, and go to state 16
    SWITCH        shift, and go to state 17
    PRINT         shift, and go to state 18
    ID            shift, and go to state 19
    INT           shift, and go to state 20
    FLOAT         shift, and go to state 21
    VOID          shift, and go to state 22
    NUM           shift, and go to state 23
    REAL          shift, and go to state 24

    $default  reduce using rule 80 (assignment_statement)

    function_declaration    go to state 25
    first_curly             go to state 26
    function_head           go to state 27
    res_id                  go to state 28
    type                    go to state 29
    statement               go to state 176
    selection_statement     go to state 31
    switch_statement        go to state 32
    ifexp                   go to state 33
    iteration_statement     go to state 34
    whileexp                go to state 35
    forexp                  go to state 36
    conditional_expression  go to state 37
    expression              go to state 38
    rel_expression          go to state 39
    normal_expression       go to state 40
    term                    go to state 41
    factor                  go to state 42
    unary_expression        go to state 43
    primary_expression      go to state 44
    func_call               go to state 45
    assignment_statement    go to state 46
    variable_declaration    go to state 47
    id_arr                  go to state 48


State 169

   39 forexp: FOR OPEN_BRACKET assignment_statement SEMI M assignment_statement SEMI .

    $default  reduce using rule 39 (forexp)


State 170

   26 switch_statement: SWITCH OPEN_BRACKET normal_expression CLOSE_BRACKET OPEN_CURLY case_list CLOSE_CURLY .

    $default  reduce using rule 26 (switch_statement)


State 171

   32 default_name: DEFAULT . COLON

    COLON  shift, and go to state 177


State 172

   27 case_list: case_list_minor default_statement .

    $default  reduce using rule 27 (case_list)


State 173

   31 default_statement: default_name . statement

    FOR           shift, and go to state 5
    IF            shift, and go to state 6
    RETURN        shift, and go to state 7
    WHILE         shift, and go to state 8
    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    BREAK         shift, and go to state 11
    CONTINUE      shift, and go to state 12
    NOT           shift, and go to state 13
    OPEN_BRACKET  shift, and go to state 14
    OPEN_CURLY    shift, and go to state 15
    MINUS         shift, and go to state 16
    SWITCH        shift, and go to state 17
    PRINT         shift, and go to state 18
    ID            shift, and go to state 19
    INT           shift, and go to state 20
    FLOAT         shift, and go to state 21
    VOID          shift, and go to state 22
    NUM           shift, and go to state 23
    REAL          shift, and go to state 24

    $default  reduce using rule 80 (assignment_statement)

    function_declaration    go to state 25
    first_curly             go to state 26
    function_head           go to state 27
    res_id                  go to state 28
    type                    go to state 29
    statement               go to state 178
    selection_statement     go to state 31
    switch_statement        go to state 32
    ifexp                   go to state 33
    iteration_statement     go to state 34
    whileexp                go to state 35
    forexp                  go to state 36
    conditional_expression  go to state 37
    expression              go to state 38
    rel_expression          go to state 39
    normal_expression       go to state 40
    term                    go to state 41
    factor                  go to state 42
    unary_expression        go to state 43
    primary_expression      go to state 44
    func_call               go to state 45
    assignment_statement    go to state 46
    variable_declaration    go to state 47
    id_arr                  go to state 48


State 174

   29 case_list_minor: case_list_minor case_statement .

    $default  reduce using rule 29 (case_list_minor)


State 175

   33 case_statement: case_name normal_expression . COLON N_new M statement
   54 normal_expression: normal_expression . PLUS term
   55                  | normal_expression . MINUS term

    PLUS   shift, and go to state 84
    MINUS  shift, and go to state 85
    COLON  shift, and go to state 179


State 176

   37 iteration_statement: forexp M assignment_statement M M CLOSE_BRACKET statement .

    $default  reduce using rule 37 (iteration_statement)


State 177

   32 default_name: DEFAULT COLON .

    $default  reduce using rule 32 (default_name)


State 178

   31 default_statement: default_name statement .

    $default  reduce using rule 31 (default_statement)


State 179

   33 case_statement: case_name normal_expression COLON . N_new M statement

    $default  reduce using rule 40 (N_new)

    N_new  go to state 180


State 180

   33 case_statement: case_name normal_expression COLON N_new . M statement

    $default  reduce using rule 41 (M)

    M  go to state 181


State 181

   33 case_statement: case_name normal_expression COLON N_new M . statement

    FOR           shift, and go to state 5
    IF            shift, and go to state 6
    RETURN        shift, and go to state 7
    WHILE         shift, and go to state 8
    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    BREAK         shift, and go to state 11
    CONTINUE      shift, and go to state 12
    NOT           shift, and go to state 13
    OPEN_BRACKET  shift, and go to state 14
    OPEN_CURLY    shift, and go to state 15
    MINUS         shift, and go to state 16
    SWITCH        shift, and go to state 17
    PRINT         shift, and go to state 18
    ID            shift, and go to state 19
    INT           shift, and go to state 20
    FLOAT         shift, and go to state 21
    VOID          shift, and go to state 22
    NUM           shift, and go to state 23
    REAL          shift, and go to state 24

    $default  reduce using rule 80 (assignment_statement)

    function_declaration    go to state 25
    first_curly             go to state 26
    function_head           go to state 27
    res_id                  go to state 28
    type                    go to state 29
    statement               go to state 182
    selection_statement     go to state 31
    switch_statement        go to state 32
    ifexp                   go to state 33
    iteration_statement     go to state 34
    whileexp                go to state 35
    forexp                  go to state 36
    conditional_expression  go to state 37
    expression              go to state 38
    rel_expression          go to state 39
    normal_expression       go to state 40
    term                    go to state 41
    factor                  go to state 42
    unary_expression        go to state 43
    primary_expression      go to state 44
    func_call               go to state 45
    assignment_statement    go to state 46
    variable_declaration    go to state 47
    id_arr                  go to state 48


State 182

   33 case_statement: case_name normal_expression COLON N_new M statement .

    $default  reduce using rule 33 (case_statement)
