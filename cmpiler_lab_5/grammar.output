Terminals unused in grammar

   PTR_OP
   DO
   LIBRARY
   ERROR
   AMP
   TILDE
   DOT
   MODULUS
   PIPE
   XOR
   QUES
   BOOL
   CHAR


Grammar

    0 $accept: program $end

    1 program: statement_list

    2 function_declaration: function_head first_curly statement_list last_curly

    3 first_curly: OPEN_CURLY

    4 last_curly: CLOSE_CURLY

    5 function_head: res_id OPEN_BRACKET parameter_list CLOSE_BRACKET

    6 res_id: type ID

    7 type: INT
    8     | FLOAT
    9     | VOID

   10 statement_list: statement_list M statement
   11               | %empty

   12 statement: variable_declaration SEMI
   13          | BREAK SEMI
   14          | CONTINUE SEMI
   15          | RETURN SEMI
   16          | RETURN conditional_expression SEMI
   17          | selection_statement
   18          | iteration_statement
   19          | assignment_statement SEMI
   20          | first_curly statement_list last_curly
   21          | switch_statement
   22          | function_declaration

   23 selection_statement: ifexp statement ELSE N M statement
   24                    | ifexp statement

   25 switch_statement: SWITCH OPEN_BRACKET normal_expression CLOSE_BRACKET OPEN_CURLY case_list CLOSE_CURLY

   26 case_list: case_list_minor default_statement
   27          | case_list_minor

   28 case_list_minor: case_list_minor case_statement
   29                | case_statement

   30 default_statement: default_name statement

   31 default_name: DEFAULT COLON

   32 case_statement: case_name normal_expression COLON N_new M statement

   33 case_name: CASE

   34 ifexp: IF OPEN_BRACKET assignment_statement CLOSE_BRACKET

   35 iteration_statement: whileexp statement
   36                    | forexp M assignment_statement M M CLOSE_BRACKET statement

   37 whileexp: WHILE M OPEN_BRACKET assignment_statement CLOSE_BRACKET

   38 forexp: FOR OPEN_BRACKET assignment_statement SEMI M assignment_statement SEMI

   39 N_new: %empty

   40 M: %empty

   41 N: %empty

   42 conditional_expression: conditional_expression AND_OP expression
   43                       | conditional_expression OR_OP expression
   44                       | expression

   45 expression: rel_expression
   46           | normal_expression

   47 rel_expression: normal_expression GT normal_expression
   48               | normal_expression LT normal_expression
   49               | normal_expression GE_OP normal_expression
   50               | normal_expression LE_OP normal_expression
   51               | normal_expression EQ_OP normal_expression
   52               | normal_expression NE_OP normal_expression

   53 normal_expression: normal_expression PLUS term
   54                  | normal_expression MINUS term
   55                  | term

   56 term: term STAR factor
   57     | term DIVIDE factor
   58     | factor

   59 factor: unary_expression

   60 unary_expression: primary_expression
   61                 | MINUS unary_expression
   62                 | NOT unary_expression
   63                 | DEC_OP unary_expression
   64                 | INC_OP unary_expression

   65 primary_expression: NUM
   66                   | REAL
   67                   | id_arr
   68                   | OPEN_BRACKET conditional_expression CLOSE_BRACKET
   69                   | func_call

   70 elist: elist OPEN_SQUARE expression CLOSE_SQUARE
   71      | OPEN_SQUARE expression CLOSE_SQUARE

   72 func_call: ID OPEN_BRACKET elist_super CLOSE_BRACKET

   73 elist_super: elist_func_call
   74            | %empty

   75 elist_func_call: elist_func_call COMMA expression
   76                | expression

   77 assignment_statement: id_arr ASSIGN conditional_expression
   78                     | conditional_expression
   79                     | %empty

   80 variable_declaration: type varlist

   81 id_arr: ID
   82       | ID elist

   83 id_arr_declare: ID
   84               | ID new_num_list

   85 new_num_list: new_num_list OPEN_SQUARE NUM CLOSE_SQUARE
   86             | OPEN_SQUARE NUM CLOSE_SQUARE

   87 parameter_list: param_decl
   88               | %empty

   89 param_decl: param_decl COMMA unit_declaration
   90           | unit_declaration

   91 unit_declaration: type ID
   92                 | type ID OPEN_SQUARE CLOSE_SQUARE

   93 varlist: varlist COMMA id_arr_declare
   94        | id_arr_declare


Terminals, with rules where they appear

$end (0) 0
error (256)
ELSE (258) 23
FOR (259) 38
IF (260) 34
RETURN (261) 15 16
WHILE (262) 37
PTR_OP (263)
INC_OP (264) 64
DEC_OP (265) 63
AND_OP (266) 42
OR_OP (267) 43
LT (268) 48
GT (269) 47
LE_OP (270) 50
GE_OP (271) 49
EQ_OP (272) 51
NE_OP (273) 52
DO (274)
BREAK (275) 13
LIBRARY (276)
CONTINUE (277) 14
ERROR (278)
NOT (279) 62
AMP (280)
TILDE (281)
STAR (282) 56
ASSIGN (283) 77
OPEN_BRACKET (284) 5 25 34 37 38 68 72
CLOSE_BRACKET (285) 5 25 34 36 37 68 72
OPEN_CURLY (286) 3 25
CLOSE_CURLY (287) 4 25
OPEN_SQUARE (288) 70 71 85 86 92
CLOSE_SQUARE (289) 70 71 85 86 92
SEMI (290) 12 13 14 15 16 19 38
COMMA (291) 75 89 93
DOT (292)
PLUS (293) 53
MINUS (294) 54 61
DIVIDE (295) 57
MODULUS (296)
PIPE (297)
XOR (298)
QUES (299)
COLON (300) 31 32
SWITCH (301) 25
CASE (302) 33
DEFAULT (303) 31
ID (304) 6 72 81 82 83 84 91 92
BOOL (305)
CHAR (306)
INT (307) 7
FLOAT (308) 8
VOID (309) 9
NUM (310) 65 85 86
REAL (311) 66
"IFS" (312)
"IFX" (313)
UMINUS (314)


Nonterminals, with rules where they appear

$accept (60)
    on left: 0
program (61)
    on left: 1, on right: 0
function_declaration (62)
    on left: 2, on right: 22
first_curly (63)
    on left: 3, on right: 2 20
last_curly (64)
    on left: 4, on right: 2 20
function_head (65)
    on left: 5, on right: 2
res_id (66)
    on left: 6, on right: 5
type (67)
    on left: 7 8 9, on right: 6 80 91 92
statement_list (68)
    on left: 10 11, on right: 1 2 10 20
statement (69)
    on left: 12 13 14 15 16 17 18 19 20 21 22, on right: 10 23 24 30
    32 35 36
selection_statement (70)
    on left: 23 24, on right: 17
switch_statement (71)
    on left: 25, on right: 21
case_list (72)
    on left: 26 27, on right: 25
case_list_minor (73)
    on left: 28 29, on right: 26 27 28
default_statement (74)
    on left: 30, on right: 26
default_name (75)
    on left: 31, on right: 30
case_statement (76)
    on left: 32, on right: 28 29
case_name (77)
    on left: 33, on right: 32
ifexp (78)
    on left: 34, on right: 23 24
iteration_statement (79)
    on left: 35 36, on right: 18
whileexp (80)
    on left: 37, on right: 35
forexp (81)
    on left: 38, on right: 36
N_new (82)
    on left: 39, on right: 32
M (83)
    on left: 40, on right: 10 23 32 36 37 38
N (84)
    on left: 41, on right: 23
conditional_expression (85)
    on left: 42 43 44, on right: 16 42 43 68 77 78
expression (86)
    on left: 45 46, on right: 42 43 44 70 71 75 76
rel_expression (87)
    on left: 47 48 49 50 51 52, on right: 45
normal_expression (88)
    on left: 53 54 55, on right: 25 32 46 47 48 49 50 51 52 53 54
term (89)
    on left: 56 57 58, on right: 53 54 55 56 57
factor (90)
    on left: 59, on right: 56 57 58
unary_expression (91)
    on left: 60 61 62 63 64, on right: 59 61 62 63 64
primary_expression (92)
    on left: 65 66 67 68 69, on right: 60
elist (93)
    on left: 70 71, on right: 70 82
func_call (94)
    on left: 72, on right: 69
elist_super (95)
    on left: 73 74, on right: 72
elist_func_call (96)
    on left: 75 76, on right: 73 75
assignment_statement (97)
    on left: 77 78 79, on right: 19 34 36 37 38
variable_declaration (98)
    on left: 80, on right: 12
id_arr (99)
    on left: 81 82, on right: 67 77
id_arr_declare (100)
    on left: 83 84, on right: 93 94
new_num_list (101)
    on left: 85 86, on right: 84 85
parameter_list (102)
    on left: 87 88, on right: 5
param_decl (103)
    on left: 89 90, on right: 87 89
unit_declaration (104)
    on left: 91 92, on right: 89 90
varlist (105)
    on left: 93 94, on right: 80 93


State 0

    0 $accept: . program $end

    $default  reduce using rule 11 (statement_list)

    program         go to state 1
    statement_list  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: statement_list .
   10 statement_list: statement_list . M statement

    $end      reduce using rule 1 (program)
    $default  reduce using rule 40 (M)

    M  go to state 4


State 3

    0 $accept: program $end .

    $default  accept


State 4

   10 statement_list: statement_list M . statement

    FOR           shift, and go to state 5
    IF            shift, and go to state 6
    RETURN        shift, and go to state 7
    WHILE         shift, and go to state 8
    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    BREAK         shift, and go to state 11
    CONTINUE      shift, and go to state 12
    NOT           shift, and go to state 13
    OPEN_BRACKET  shift, and go to state 14
    OPEN_CURLY    shift, and go to state 15
    MINUS         shift, and go to state 16
    SWITCH        shift, and go to state 17
    ID            shift, and go to state 18
    INT           shift, and go to state 19
    FLOAT         shift, and go to state 20
    VOID          shift, and go to state 21
    NUM           shift, and go to state 22
    REAL          shift, and go to state 23

    $default  reduce using rule 79 (assignment_statement)

    function_declaration    go to state 24
    first_curly             go to state 25
    function_head           go to state 26
    res_id                  go to state 27
    type                    go to state 28
    statement               go to state 29
    selection_statement     go to state 30
    switch_statement        go to state 31
    ifexp                   go to state 32
    iteration_statement     go to state 33
    whileexp                go to state 34
    forexp                  go to state 35
    conditional_expression  go to state 36
    expression              go to state 37
    rel_expression          go to state 38
    normal_expression       go to state 39
    term                    go to state 40
    factor                  go to state 41
    unary_expression        go to state 42
    primary_expression      go to state 43
    func_call               go to state 44
    assignment_statement    go to state 45
    variable_declaration    go to state 46
    id_arr                  go to state 47


State 5

   38 forexp: FOR . OPEN_BRACKET assignment_statement SEMI M assignment_statement SEMI

    OPEN_BRACKET  shift, and go to state 48


State 6

   34 ifexp: IF . OPEN_BRACKET assignment_statement CLOSE_BRACKET

    OPEN_BRACKET  shift, and go to state 49


State 7

   15 statement: RETURN . SEMI
   16          | RETURN . conditional_expression SEMI

    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 13
    OPEN_BRACKET  shift, and go to state 14
    SEMI          shift, and go to state 50
    MINUS         shift, and go to state 16
    ID            shift, and go to state 18
    NUM           shift, and go to state 22
    REAL          shift, and go to state 23

    conditional_expression  go to state 51
    expression              go to state 37
    rel_expression          go to state 38
    normal_expression       go to state 39
    term                    go to state 40
    factor                  go to state 41
    unary_expression        go to state 42
    primary_expression      go to state 43
    func_call               go to state 44
    id_arr                  go to state 52


State 8

   37 whileexp: WHILE . M OPEN_BRACKET assignment_statement CLOSE_BRACKET

    $default  reduce using rule 40 (M)

    M  go to state 53


State 9

   64 unary_expression: INC_OP . unary_expression

    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 13
    OPEN_BRACKET  shift, and go to state 14
    MINUS         shift, and go to state 16
    ID            shift, and go to state 18
    NUM           shift, and go to state 22
    REAL          shift, and go to state 23

    unary_expression    go to state 54
    primary_expression  go to state 43
    func_call           go to state 44
    id_arr              go to state 52


State 10

   63 unary_expression: DEC_OP . unary_expression

    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 13
    OPEN_BRACKET  shift, and go to state 14
    MINUS         shift, and go to state 16
    ID            shift, and go to state 18
    NUM           shift, and go to state 22
    REAL          shift, and go to state 23

    unary_expression    go to state 55
    primary_expression  go to state 43
    func_call           go to state 44
    id_arr              go to state 52


State 11

   13 statement: BREAK . SEMI

    SEMI  shift, and go to state 56


State 12

   14 statement: CONTINUE . SEMI

    SEMI  shift, and go to state 57


State 13

   62 unary_expression: NOT . unary_expression

    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 13
    OPEN_BRACKET  shift, and go to state 14
    MINUS         shift, and go to state 16
    ID            shift, and go to state 18
    NUM           shift, and go to state 22
    REAL          shift, and go to state 23

    unary_expression    go to state 58
    primary_expression  go to state 43
    func_call           go to state 44
    id_arr              go to state 52


State 14

   68 primary_expression: OPEN_BRACKET . conditional_expression CLOSE_BRACKET

    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 13
    OPEN_BRACKET  shift, and go to state 14
    MINUS         shift, and go to state 16
    ID            shift, and go to state 18
    NUM           shift, and go to state 22
    REAL          shift, and go to state 23

    conditional_expression  go to state 59
    expression              go to state 37
    rel_expression          go to state 38
    normal_expression       go to state 39
    term                    go to state 40
    factor                  go to state 41
    unary_expression        go to state 42
    primary_expression      go to state 43
    func_call               go to state 44
    id_arr                  go to state 52


State 15

    3 first_curly: OPEN_CURLY .

    $default  reduce using rule 3 (first_curly)


State 16

   61 unary_expression: MINUS . unary_expression

    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 13
    OPEN_BRACKET  shift, and go to state 14
    MINUS         shift, and go to state 16
    ID            shift, and go to state 18
    NUM           shift, and go to state 22
    REAL          shift, and go to state 23

    unary_expression    go to state 60
    primary_expression  go to state 43
    func_call           go to state 44
    id_arr              go to state 52


State 17

   25 switch_statement: SWITCH . OPEN_BRACKET normal_expression CLOSE_BRACKET OPEN_CURLY case_list CLOSE_CURLY

    OPEN_BRACKET  shift, and go to state 61


State 18

   72 func_call: ID . OPEN_BRACKET elist_super CLOSE_BRACKET
   81 id_arr: ID .
   82       | ID . elist

    OPEN_BRACKET  shift, and go to state 62
    OPEN_SQUARE   shift, and go to state 63

    $default  reduce using rule 81 (id_arr)

    elist  go to state 64


State 19

    7 type: INT .

    $default  reduce using rule 7 (type)


State 20

    8 type: FLOAT .

    $default  reduce using rule 8 (type)


State 21

    9 type: VOID .

    $default  reduce using rule 9 (type)


State 22

   65 primary_expression: NUM .

    $default  reduce using rule 65 (primary_expression)


State 23

   66 primary_expression: REAL .

    $default  reduce using rule 66 (primary_expression)


State 24

   22 statement: function_declaration .

    $default  reduce using rule 22 (statement)


State 25

   20 statement: first_curly . statement_list last_curly

    $default  reduce using rule 11 (statement_list)

    statement_list  go to state 65


State 26

    2 function_declaration: function_head . first_curly statement_list last_curly

    OPEN_CURLY  shift, and go to state 15

    first_curly  go to state 66


State 27

    5 function_head: res_id . OPEN_BRACKET parameter_list CLOSE_BRACKET

    OPEN_BRACKET  shift, and go to state 67


State 28

    6 res_id: type . ID
   80 variable_declaration: type . varlist

    ID  shift, and go to state 68

    id_arr_declare  go to state 69
    varlist         go to state 70


State 29

   10 statement_list: statement_list M statement .

    $default  reduce using rule 10 (statement_list)


State 30

   17 statement: selection_statement .

    $default  reduce using rule 17 (statement)


State 31

   21 statement: switch_statement .

    $default  reduce using rule 21 (statement)


State 32

   23 selection_statement: ifexp . statement ELSE N M statement
   24                    | ifexp . statement

    FOR           shift, and go to state 5
    IF            shift, and go to state 6
    RETURN        shift, and go to state 7
    WHILE         shift, and go to state 8
    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    BREAK         shift, and go to state 11
    CONTINUE      shift, and go to state 12
    NOT           shift, and go to state 13
    OPEN_BRACKET  shift, and go to state 14
    OPEN_CURLY    shift, and go to state 15
    MINUS         shift, and go to state 16
    SWITCH        shift, and go to state 17
    ID            shift, and go to state 18
    INT           shift, and go to state 19
    FLOAT         shift, and go to state 20
    VOID          shift, and go to state 21
    NUM           shift, and go to state 22
    REAL          shift, and go to state 23

    $default  reduce using rule 79 (assignment_statement)

    function_declaration    go to state 24
    first_curly             go to state 25
    function_head           go to state 26
    res_id                  go to state 27
    type                    go to state 28
    statement               go to state 71
    selection_statement     go to state 30
    switch_statement        go to state 31
    ifexp                   go to state 32
    iteration_statement     go to state 33
    whileexp                go to state 34
    forexp                  go to state 35
    conditional_expression  go to state 36
    expression              go to state 37
    rel_expression          go to state 38
    normal_expression       go to state 39
    term                    go to state 40
    factor                  go to state 41
    unary_expression        go to state 42
    primary_expression      go to state 43
    func_call               go to state 44
    assignment_statement    go to state 45
    variable_declaration    go to state 46
    id_arr                  go to state 47


State 33

   18 statement: iteration_statement .

    $default  reduce using rule 18 (statement)


State 34

   35 iteration_statement: whileexp . statement

    FOR           shift, and go to state 5
    IF            shift, and go to state 6
    RETURN        shift, and go to state 7
    WHILE         shift, and go to state 8
    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    BREAK         shift, and go to state 11
    CONTINUE      shift, and go to state 12
    NOT           shift, and go to state 13
    OPEN_BRACKET  shift, and go to state 14
    OPEN_CURLY    shift, and go to state 15
    MINUS         shift, and go to state 16
    SWITCH        shift, and go to state 17
    ID            shift, and go to state 18
    INT           shift, and go to state 19
    FLOAT         shift, and go to state 20
    VOID          shift, and go to state 21
    NUM           shift, and go to state 22
    REAL          shift, and go to state 23

    $default  reduce using rule 79 (assignment_statement)

    function_declaration    go to state 24
    first_curly             go to state 25
    function_head           go to state 26
    res_id                  go to state 27
    type                    go to state 28
    statement               go to state 72
    selection_statement     go to state 30
    switch_statement        go to state 31
    ifexp                   go to state 32
    iteration_statement     go to state 33
    whileexp                go to state 34
    forexp                  go to state 35
    conditional_expression  go to state 36
    expression              go to state 37
    rel_expression          go to state 38
    normal_expression       go to state 39
    term                    go to state 40
    factor                  go to state 41
    unary_expression        go to state 42
    primary_expression      go to state 43
    func_call               go to state 44
    assignment_statement    go to state 45
    variable_declaration    go to state 46
    id_arr                  go to state 47


State 35

   36 iteration_statement: forexp . M assignment_statement M M CLOSE_BRACKET statement

    $default  reduce using rule 40 (M)

    M  go to state 73


State 36

   42 conditional_expression: conditional_expression . AND_OP expression
   43                       | conditional_expression . OR_OP expression
   78 assignment_statement: conditional_expression .

    AND_OP  shift, and go to state 74
    OR_OP   shift, and go to state 75

    $default  reduce using rule 78 (assignment_statement)


State 37

   44 conditional_expression: expression .

    $default  reduce using rule 44 (conditional_expression)


State 38

   45 expression: rel_expression .

    $default  reduce using rule 45 (expression)


State 39

   46 expression: normal_expression .
   47 rel_expression: normal_expression . GT normal_expression
   48               | normal_expression . LT normal_expression
   49               | normal_expression . GE_OP normal_expression
   50               | normal_expression . LE_OP normal_expression
   51               | normal_expression . EQ_OP normal_expression
   52               | normal_expression . NE_OP normal_expression
   53 normal_expression: normal_expression . PLUS term
   54                  | normal_expression . MINUS term

    LT     shift, and go to state 76
    GT     shift, and go to state 77
    LE_OP  shift, and go to state 78
    GE_OP  shift, and go to state 79
    EQ_OP  shift, and go to state 80
    NE_OP  shift, and go to state 81
    PLUS   shift, and go to state 82
    MINUS  shift, and go to state 83

    $default  reduce using rule 46 (expression)


State 40

   55 normal_expression: term .
   56 term: term . STAR factor
   57     | term . DIVIDE factor

    STAR    shift, and go to state 84
    DIVIDE  shift, and go to state 85

    $default  reduce using rule 55 (normal_expression)


State 41

   58 term: factor .

    $default  reduce using rule 58 (term)


State 42

   59 factor: unary_expression .

    $default  reduce using rule 59 (factor)


State 43

   60 unary_expression: primary_expression .

    $default  reduce using rule 60 (unary_expression)


State 44

   69 primary_expression: func_call .

    $default  reduce using rule 69 (primary_expression)


State 45

   19 statement: assignment_statement . SEMI

    SEMI  shift, and go to state 86


State 46

   12 statement: variable_declaration . SEMI

    SEMI  shift, and go to state 87


State 47

   67 primary_expression: id_arr .
   77 assignment_statement: id_arr . ASSIGN conditional_expression

    ASSIGN  shift, and go to state 88

    $default  reduce using rule 67 (primary_expression)


State 48

   38 forexp: FOR OPEN_BRACKET . assignment_statement SEMI M assignment_statement SEMI

    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 13
    OPEN_BRACKET  shift, and go to state 14
    MINUS         shift, and go to state 16
    ID            shift, and go to state 18
    NUM           shift, and go to state 22
    REAL          shift, and go to state 23

    $default  reduce using rule 79 (assignment_statement)

    conditional_expression  go to state 36
    expression              go to state 37
    rel_expression          go to state 38
    normal_expression       go to state 39
    term                    go to state 40
    factor                  go to state 41
    unary_expression        go to state 42
    primary_expression      go to state 43
    func_call               go to state 44
    assignment_statement    go to state 89
    id_arr                  go to state 47


State 49

   34 ifexp: IF OPEN_BRACKET . assignment_statement CLOSE_BRACKET

    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 13
    OPEN_BRACKET  shift, and go to state 14
    MINUS         shift, and go to state 16
    ID            shift, and go to state 18
    NUM           shift, and go to state 22
    REAL          shift, and go to state 23

    $default  reduce using rule 79 (assignment_statement)

    conditional_expression  go to state 36
    expression              go to state 37
    rel_expression          go to state 38
    normal_expression       go to state 39
    term                    go to state 40
    factor                  go to state 41
    unary_expression        go to state 42
    primary_expression      go to state 43
    func_call               go to state 44
    assignment_statement    go to state 90
    id_arr                  go to state 47


State 50

   15 statement: RETURN SEMI .

    $default  reduce using rule 15 (statement)


State 51

   16 statement: RETURN conditional_expression . SEMI
   42 conditional_expression: conditional_expression . AND_OP expression
   43                       | conditional_expression . OR_OP expression

    AND_OP  shift, and go to state 74
    OR_OP   shift, and go to state 75
    SEMI    shift, and go to state 91


State 52

   67 primary_expression: id_arr .

    $default  reduce using rule 67 (primary_expression)


State 53

   37 whileexp: WHILE M . OPEN_BRACKET assignment_statement CLOSE_BRACKET

    OPEN_BRACKET  shift, and go to state 92


State 54

   64 unary_expression: INC_OP unary_expression .

    $default  reduce using rule 64 (unary_expression)


State 55

   63 unary_expression: DEC_OP unary_expression .

    $default  reduce using rule 63 (unary_expression)


State 56

   13 statement: BREAK SEMI .

    $default  reduce using rule 13 (statement)


State 57

   14 statement: CONTINUE SEMI .

    $default  reduce using rule 14 (statement)


State 58

   62 unary_expression: NOT unary_expression .

    $default  reduce using rule 62 (unary_expression)


State 59

   42 conditional_expression: conditional_expression . AND_OP expression
   43                       | conditional_expression . OR_OP expression
   68 primary_expression: OPEN_BRACKET conditional_expression . CLOSE_BRACKET

    AND_OP         shift, and go to state 74
    OR_OP          shift, and go to state 75
    CLOSE_BRACKET  shift, and go to state 93


State 60

   61 unary_expression: MINUS unary_expression .

    $default  reduce using rule 61 (unary_expression)


State 61

   25 switch_statement: SWITCH OPEN_BRACKET . normal_expression CLOSE_BRACKET OPEN_CURLY case_list CLOSE_CURLY

    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 13
    OPEN_BRACKET  shift, and go to state 14
    MINUS         shift, and go to state 16
    ID            shift, and go to state 18
    NUM           shift, and go to state 22
    REAL          shift, and go to state 23

    normal_expression   go to state 94
    term                go to state 40
    factor              go to state 41
    unary_expression    go to state 42
    primary_expression  go to state 43
    func_call           go to state 44
    id_arr              go to state 52


State 62

   72 func_call: ID OPEN_BRACKET . elist_super CLOSE_BRACKET

    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 13
    OPEN_BRACKET  shift, and go to state 14
    MINUS         shift, and go to state 16
    ID            shift, and go to state 18
    NUM           shift, and go to state 22
    REAL          shift, and go to state 23

    $default  reduce using rule 74 (elist_super)

    expression          go to state 95
    rel_expression      go to state 38
    normal_expression   go to state 39
    term                go to state 40
    factor              go to state 41
    unary_expression    go to state 42
    primary_expression  go to state 43
    func_call           go to state 44
    elist_super         go to state 96
    elist_func_call     go to state 97
    id_arr              go to state 52


State 63

   71 elist: OPEN_SQUARE . expression CLOSE_SQUARE

    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 13
    OPEN_BRACKET  shift, and go to state 14
    MINUS         shift, and go to state 16
    ID            shift, and go to state 18
    NUM           shift, and go to state 22
    REAL          shift, and go to state 23

    expression          go to state 98
    rel_expression      go to state 38
    normal_expression   go to state 39
    term                go to state 40
    factor              go to state 41
    unary_expression    go to state 42
    primary_expression  go to state 43
    func_call           go to state 44
    id_arr              go to state 52


State 64

   70 elist: elist . OPEN_SQUARE expression CLOSE_SQUARE
   82 id_arr: ID elist .

    OPEN_SQUARE  shift, and go to state 99

    $default  reduce using rule 82 (id_arr)


State 65

   10 statement_list: statement_list . M statement
   20 statement: first_curly statement_list . last_curly

    CLOSE_CURLY  shift, and go to state 100

    $default  reduce using rule 40 (M)

    last_curly  go to state 101
    M           go to state 4


State 66

    2 function_declaration: function_head first_curly . statement_list last_curly

    $default  reduce using rule 11 (statement_list)

    statement_list  go to state 102


State 67

    5 function_head: res_id OPEN_BRACKET . parameter_list CLOSE_BRACKET

    INT    shift, and go to state 19
    FLOAT  shift, and go to state 20
    VOID   shift, and go to state 21

    $default  reduce using rule 88 (parameter_list)

    type              go to state 103
    parameter_list    go to state 104
    param_decl        go to state 105
    unit_declaration  go to state 106


State 68

    6 res_id: type ID .
   83 id_arr_declare: ID .
   84               | ID . new_num_list

    OPEN_SQUARE  shift, and go to state 107

    OPEN_BRACKET  reduce using rule 6 (res_id)
    $default      reduce using rule 83 (id_arr_declare)

    new_num_list  go to state 108


State 69

   94 varlist: id_arr_declare .

    $default  reduce using rule 94 (varlist)


State 70

   80 variable_declaration: type varlist .
   93 varlist: varlist . COMMA id_arr_declare

    COMMA  shift, and go to state 109

    $default  reduce using rule 80 (variable_declaration)


State 71

   23 selection_statement: ifexp statement . ELSE N M statement
   24                    | ifexp statement .

    ELSE  shift, and go to state 110

    $default  reduce using rule 24 (selection_statement)


State 72

   35 iteration_statement: whileexp statement .

    $default  reduce using rule 35 (iteration_statement)


State 73

   36 iteration_statement: forexp M . assignment_statement M M CLOSE_BRACKET statement

    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 13
    OPEN_BRACKET  shift, and go to state 14
    MINUS         shift, and go to state 16
    ID            shift, and go to state 18
    NUM           shift, and go to state 22
    REAL          shift, and go to state 23

    $default  reduce using rule 79 (assignment_statement)

    conditional_expression  go to state 36
    expression              go to state 37
    rel_expression          go to state 38
    normal_expression       go to state 39
    term                    go to state 40
    factor                  go to state 41
    unary_expression        go to state 42
    primary_expression      go to state 43
    func_call               go to state 44
    assignment_statement    go to state 111
    id_arr                  go to state 47


State 74

   42 conditional_expression: conditional_expression AND_OP . expression

    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 13
    OPEN_BRACKET  shift, and go to state 14
    MINUS         shift, and go to state 16
    ID            shift, and go to state 18
    NUM           shift, and go to state 22
    REAL          shift, and go to state 23

    expression          go to state 112
    rel_expression      go to state 38
    normal_expression   go to state 39
    term                go to state 40
    factor              go to state 41
    unary_expression    go to state 42
    primary_expression  go to state 43
    func_call           go to state 44
    id_arr              go to state 52


State 75

   43 conditional_expression: conditional_expression OR_OP . expression

    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 13
    OPEN_BRACKET  shift, and go to state 14
    MINUS         shift, and go to state 16
    ID            shift, and go to state 18
    NUM           shift, and go to state 22
    REAL          shift, and go to state 23

    expression          go to state 113
    rel_expression      go to state 38
    normal_expression   go to state 39
    term                go to state 40
    factor              go to state 41
    unary_expression    go to state 42
    primary_expression  go to state 43
    func_call           go to state 44
    id_arr              go to state 52


State 76

   48 rel_expression: normal_expression LT . normal_expression

    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 13
    OPEN_BRACKET  shift, and go to state 14
    MINUS         shift, and go to state 16
    ID            shift, and go to state 18
    NUM           shift, and go to state 22
    REAL          shift, and go to state 23

    normal_expression   go to state 114
    term                go to state 40
    factor              go to state 41
    unary_expression    go to state 42
    primary_expression  go to state 43
    func_call           go to state 44
    id_arr              go to state 52


State 77

   47 rel_expression: normal_expression GT . normal_expression

    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 13
    OPEN_BRACKET  shift, and go to state 14
    MINUS         shift, and go to state 16
    ID            shift, and go to state 18
    NUM           shift, and go to state 22
    REAL          shift, and go to state 23

    normal_expression   go to state 115
    term                go to state 40
    factor              go to state 41
    unary_expression    go to state 42
    primary_expression  go to state 43
    func_call           go to state 44
    id_arr              go to state 52


State 78

   50 rel_expression: normal_expression LE_OP . normal_expression

    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 13
    OPEN_BRACKET  shift, and go to state 14
    MINUS         shift, and go to state 16
    ID            shift, and go to state 18
    NUM           shift, and go to state 22
    REAL          shift, and go to state 23

    normal_expression   go to state 116
    term                go to state 40
    factor              go to state 41
    unary_expression    go to state 42
    primary_expression  go to state 43
    func_call           go to state 44
    id_arr              go to state 52


State 79

   49 rel_expression: normal_expression GE_OP . normal_expression

    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 13
    OPEN_BRACKET  shift, and go to state 14
    MINUS         shift, and go to state 16
    ID            shift, and go to state 18
    NUM           shift, and go to state 22
    REAL          shift, and go to state 23

    normal_expression   go to state 117
    term                go to state 40
    factor              go to state 41
    unary_expression    go to state 42
    primary_expression  go to state 43
    func_call           go to state 44
    id_arr              go to state 52


State 80

   51 rel_expression: normal_expression EQ_OP . normal_expression

    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 13
    OPEN_BRACKET  shift, and go to state 14
    MINUS         shift, and go to state 16
    ID            shift, and go to state 18
    NUM           shift, and go to state 22
    REAL          shift, and go to state 23

    normal_expression   go to state 118
    term                go to state 40
    factor              go to state 41
    unary_expression    go to state 42
    primary_expression  go to state 43
    func_call           go to state 44
    id_arr              go to state 52


State 81

   52 rel_expression: normal_expression NE_OP . normal_expression

    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 13
    OPEN_BRACKET  shift, and go to state 14
    MINUS         shift, and go to state 16
    ID            shift, and go to state 18
    NUM           shift, and go to state 22
    REAL          shift, and go to state 23

    normal_expression   go to state 119
    term                go to state 40
    factor              go to state 41
    unary_expression    go to state 42
    primary_expression  go to state 43
    func_call           go to state 44
    id_arr              go to state 52


State 82

   53 normal_expression: normal_expression PLUS . term

    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 13
    OPEN_BRACKET  shift, and go to state 14
    MINUS         shift, and go to state 16
    ID            shift, and go to state 18
    NUM           shift, and go to state 22
    REAL          shift, and go to state 23

    term                go to state 120
    factor              go to state 41
    unary_expression    go to state 42
    primary_expression  go to state 43
    func_call           go to state 44
    id_arr              go to state 52


State 83

   54 normal_expression: normal_expression MINUS . term

    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 13
    OPEN_BRACKET  shift, and go to state 14
    MINUS         shift, and go to state 16
    ID            shift, and go to state 18
    NUM           shift, and go to state 22
    REAL          shift, and go to state 23

    term                go to state 121
    factor              go to state 41
    unary_expression    go to state 42
    primary_expression  go to state 43
    func_call           go to state 44
    id_arr              go to state 52


State 84

   56 term: term STAR . factor

    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 13
    OPEN_BRACKET  shift, and go to state 14
    MINUS         shift, and go to state 16
    ID            shift, and go to state 18
    NUM           shift, and go to state 22
    REAL          shift, and go to state 23

    factor              go to state 122
    unary_expression    go to state 42
    primary_expression  go to state 43
    func_call           go to state 44
    id_arr              go to state 52


State 85

   57 term: term DIVIDE . factor

    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 13
    OPEN_BRACKET  shift, and go to state 14
    MINUS         shift, and go to state 16
    ID            shift, and go to state 18
    NUM           shift, and go to state 22
    REAL          shift, and go to state 23

    factor              go to state 123
    unary_expression    go to state 42
    primary_expression  go to state 43
    func_call           go to state 44
    id_arr              go to state 52


State 86

   19 statement: assignment_statement SEMI .

    $default  reduce using rule 19 (statement)


State 87

   12 statement: variable_declaration SEMI .

    $default  reduce using rule 12 (statement)


State 88

   77 assignment_statement: id_arr ASSIGN . conditional_expression

    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 13
    OPEN_BRACKET  shift, and go to state 14
    MINUS         shift, and go to state 16
    ID            shift, and go to state 18
    NUM           shift, and go to state 22
    REAL          shift, and go to state 23

    conditional_expression  go to state 124
    expression              go to state 37
    rel_expression          go to state 38
    normal_expression       go to state 39
    term                    go to state 40
    factor                  go to state 41
    unary_expression        go to state 42
    primary_expression      go to state 43
    func_call               go to state 44
    id_arr                  go to state 52


State 89

   38 forexp: FOR OPEN_BRACKET assignment_statement . SEMI M assignment_statement SEMI

    SEMI  shift, and go to state 125


State 90

   34 ifexp: IF OPEN_BRACKET assignment_statement . CLOSE_BRACKET

    CLOSE_BRACKET  shift, and go to state 126


State 91

   16 statement: RETURN conditional_expression SEMI .

    $default  reduce using rule 16 (statement)


State 92

   37 whileexp: WHILE M OPEN_BRACKET . assignment_statement CLOSE_BRACKET

    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 13
    OPEN_BRACKET  shift, and go to state 14
    MINUS         shift, and go to state 16
    ID            shift, and go to state 18
    NUM           shift, and go to state 22
    REAL          shift, and go to state 23

    $default  reduce using rule 79 (assignment_statement)

    conditional_expression  go to state 36
    expression              go to state 37
    rel_expression          go to state 38
    normal_expression       go to state 39
    term                    go to state 40
    factor                  go to state 41
    unary_expression        go to state 42
    primary_expression      go to state 43
    func_call               go to state 44
    assignment_statement    go to state 127
    id_arr                  go to state 47


State 93

   68 primary_expression: OPEN_BRACKET conditional_expression CLOSE_BRACKET .

    $default  reduce using rule 68 (primary_expression)


State 94

   25 switch_statement: SWITCH OPEN_BRACKET normal_expression . CLOSE_BRACKET OPEN_CURLY case_list CLOSE_CURLY
   53 normal_expression: normal_expression . PLUS term
   54                  | normal_expression . MINUS term

    CLOSE_BRACKET  shift, and go to state 128
    PLUS           shift, and go to state 82
    MINUS          shift, and go to state 83


State 95

   76 elist_func_call: expression .

    $default  reduce using rule 76 (elist_func_call)


State 96

   72 func_call: ID OPEN_BRACKET elist_super . CLOSE_BRACKET

    CLOSE_BRACKET  shift, and go to state 129


State 97

   73 elist_super: elist_func_call .
   75 elist_func_call: elist_func_call . COMMA expression

    COMMA  shift, and go to state 130

    $default  reduce using rule 73 (elist_super)


State 98

   71 elist: OPEN_SQUARE expression . CLOSE_SQUARE

    CLOSE_SQUARE  shift, and go to state 131


State 99

   70 elist: elist OPEN_SQUARE . expression CLOSE_SQUARE

    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 13
    OPEN_BRACKET  shift, and go to state 14
    MINUS         shift, and go to state 16
    ID            shift, and go to state 18
    NUM           shift, and go to state 22
    REAL          shift, and go to state 23

    expression          go to state 132
    rel_expression      go to state 38
    normal_expression   go to state 39
    term                go to state 40
    factor              go to state 41
    unary_expression    go to state 42
    primary_expression  go to state 43
    func_call           go to state 44
    id_arr              go to state 52


State 100

    4 last_curly: CLOSE_CURLY .

    $default  reduce using rule 4 (last_curly)


State 101

   20 statement: first_curly statement_list last_curly .

    $default  reduce using rule 20 (statement)


State 102

    2 function_declaration: function_head first_curly statement_list . last_curly
   10 statement_list: statement_list . M statement

    CLOSE_CURLY  shift, and go to state 100

    $default  reduce using rule 40 (M)

    last_curly  go to state 133
    M           go to state 4


State 103

   91 unit_declaration: type . ID
   92                 | type . ID OPEN_SQUARE CLOSE_SQUARE

    ID  shift, and go to state 134


State 104

    5 function_head: res_id OPEN_BRACKET parameter_list . CLOSE_BRACKET

    CLOSE_BRACKET  shift, and go to state 135


State 105

   87 parameter_list: param_decl .
   89 param_decl: param_decl . COMMA unit_declaration

    COMMA  shift, and go to state 136

    $default  reduce using rule 87 (parameter_list)


State 106

   90 param_decl: unit_declaration .

    $default  reduce using rule 90 (param_decl)


State 107

   86 new_num_list: OPEN_SQUARE . NUM CLOSE_SQUARE

    NUM  shift, and go to state 137


State 108

   84 id_arr_declare: ID new_num_list .
   85 new_num_list: new_num_list . OPEN_SQUARE NUM CLOSE_SQUARE

    OPEN_SQUARE  shift, and go to state 138

    $default  reduce using rule 84 (id_arr_declare)


State 109

   93 varlist: varlist COMMA . id_arr_declare

    ID  shift, and go to state 139

    id_arr_declare  go to state 140


State 110

   23 selection_statement: ifexp statement ELSE . N M statement

    $default  reduce using rule 41 (N)

    N  go to state 141


State 111

   36 iteration_statement: forexp M assignment_statement . M M CLOSE_BRACKET statement

    $default  reduce using rule 40 (M)

    M  go to state 142


State 112

   42 conditional_expression: conditional_expression AND_OP expression .

    $default  reduce using rule 42 (conditional_expression)


State 113

   43 conditional_expression: conditional_expression OR_OP expression .

    $default  reduce using rule 43 (conditional_expression)


State 114

   48 rel_expression: normal_expression LT normal_expression .
   53 normal_expression: normal_expression . PLUS term
   54                  | normal_expression . MINUS term

    PLUS   shift, and go to state 82
    MINUS  shift, and go to state 83

    $default  reduce using rule 48 (rel_expression)


State 115

   47 rel_expression: normal_expression GT normal_expression .
   53 normal_expression: normal_expression . PLUS term
   54                  | normal_expression . MINUS term

    PLUS   shift, and go to state 82
    MINUS  shift, and go to state 83

    $default  reduce using rule 47 (rel_expression)


State 116

   50 rel_expression: normal_expression LE_OP normal_expression .
   53 normal_expression: normal_expression . PLUS term
   54                  | normal_expression . MINUS term

    PLUS   shift, and go to state 82
    MINUS  shift, and go to state 83

    $default  reduce using rule 50 (rel_expression)


State 117

   49 rel_expression: normal_expression GE_OP normal_expression .
   53 normal_expression: normal_expression . PLUS term
   54                  | normal_expression . MINUS term

    PLUS   shift, and go to state 82
    MINUS  shift, and go to state 83

    $default  reduce using rule 49 (rel_expression)


State 118

   51 rel_expression: normal_expression EQ_OP normal_expression .
   53 normal_expression: normal_expression . PLUS term
   54                  | normal_expression . MINUS term

    PLUS   shift, and go to state 82
    MINUS  shift, and go to state 83

    $default  reduce using rule 51 (rel_expression)


State 119

   52 rel_expression: normal_expression NE_OP normal_expression .
   53 normal_expression: normal_expression . PLUS term
   54                  | normal_expression . MINUS term

    PLUS   shift, and go to state 82
    MINUS  shift, and go to state 83

    $default  reduce using rule 52 (rel_expression)


State 120

   53 normal_expression: normal_expression PLUS term .
   56 term: term . STAR factor
   57     | term . DIVIDE factor

    STAR    shift, and go to state 84
    DIVIDE  shift, and go to state 85

    $default  reduce using rule 53 (normal_expression)


State 121

   54 normal_expression: normal_expression MINUS term .
   56 term: term . STAR factor
   57     | term . DIVIDE factor

    STAR    shift, and go to state 84
    DIVIDE  shift, and go to state 85

    $default  reduce using rule 54 (normal_expression)


State 122

   56 term: term STAR factor .

    $default  reduce using rule 56 (term)


State 123

   57 term: term DIVIDE factor .

    $default  reduce using rule 57 (term)


State 124

   42 conditional_expression: conditional_expression . AND_OP expression
   43                       | conditional_expression . OR_OP expression
   77 assignment_statement: id_arr ASSIGN conditional_expression .

    AND_OP  shift, and go to state 74
    OR_OP   shift, and go to state 75

    $default  reduce using rule 77 (assignment_statement)


State 125

   38 forexp: FOR OPEN_BRACKET assignment_statement SEMI . M assignment_statement SEMI

    $default  reduce using rule 40 (M)

    M  go to state 143


State 126

   34 ifexp: IF OPEN_BRACKET assignment_statement CLOSE_BRACKET .

    $default  reduce using rule 34 (ifexp)


State 127

   37 whileexp: WHILE M OPEN_BRACKET assignment_statement . CLOSE_BRACKET

    CLOSE_BRACKET  shift, and go to state 144


State 128

   25 switch_statement: SWITCH OPEN_BRACKET normal_expression CLOSE_BRACKET . OPEN_CURLY case_list CLOSE_CURLY

    OPEN_CURLY  shift, and go to state 145


State 129

   72 func_call: ID OPEN_BRACKET elist_super CLOSE_BRACKET .

    $default  reduce using rule 72 (func_call)


State 130

   75 elist_func_call: elist_func_call COMMA . expression

    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 13
    OPEN_BRACKET  shift, and go to state 14
    MINUS         shift, and go to state 16
    ID            shift, and go to state 18
    NUM           shift, and go to state 22
    REAL          shift, and go to state 23

    expression          go to state 146
    rel_expression      go to state 38
    normal_expression   go to state 39
    term                go to state 40
    factor              go to state 41
    unary_expression    go to state 42
    primary_expression  go to state 43
    func_call           go to state 44
    id_arr              go to state 52


State 131

   71 elist: OPEN_SQUARE expression CLOSE_SQUARE .

    $default  reduce using rule 71 (elist)


State 132

   70 elist: elist OPEN_SQUARE expression . CLOSE_SQUARE

    CLOSE_SQUARE  shift, and go to state 147


State 133

    2 function_declaration: function_head first_curly statement_list last_curly .

    $default  reduce using rule 2 (function_declaration)


State 134

   91 unit_declaration: type ID .
   92                 | type ID . OPEN_SQUARE CLOSE_SQUARE

    OPEN_SQUARE  shift, and go to state 148

    $default  reduce using rule 91 (unit_declaration)


State 135

    5 function_head: res_id OPEN_BRACKET parameter_list CLOSE_BRACKET .

    $default  reduce using rule 5 (function_head)


State 136

   89 param_decl: param_decl COMMA . unit_declaration

    INT    shift, and go to state 19
    FLOAT  shift, and go to state 20
    VOID   shift, and go to state 21

    type              go to state 103
    unit_declaration  go to state 149


State 137

   86 new_num_list: OPEN_SQUARE NUM . CLOSE_SQUARE

    CLOSE_SQUARE  shift, and go to state 150


State 138

   85 new_num_list: new_num_list OPEN_SQUARE . NUM CLOSE_SQUARE

    NUM  shift, and go to state 151


State 139

   83 id_arr_declare: ID .
   84               | ID . new_num_list

    OPEN_SQUARE  shift, and go to state 107

    $default  reduce using rule 83 (id_arr_declare)

    new_num_list  go to state 108


State 140

   93 varlist: varlist COMMA id_arr_declare .

    $default  reduce using rule 93 (varlist)


State 141

   23 selection_statement: ifexp statement ELSE N . M statement

    $default  reduce using rule 40 (M)

    M  go to state 152


State 142

   36 iteration_statement: forexp M assignment_statement M . M CLOSE_BRACKET statement

    $default  reduce using rule 40 (M)

    M  go to state 153


State 143

   38 forexp: FOR OPEN_BRACKET assignment_statement SEMI M . assignment_statement SEMI

    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 13
    OPEN_BRACKET  shift, and go to state 14
    MINUS         shift, and go to state 16
    ID            shift, and go to state 18
    NUM           shift, and go to state 22
    REAL          shift, and go to state 23

    $default  reduce using rule 79 (assignment_statement)

    conditional_expression  go to state 36
    expression              go to state 37
    rel_expression          go to state 38
    normal_expression       go to state 39
    term                    go to state 40
    factor                  go to state 41
    unary_expression        go to state 42
    primary_expression      go to state 43
    func_call               go to state 44
    assignment_statement    go to state 154
    id_arr                  go to state 47


State 144

   37 whileexp: WHILE M OPEN_BRACKET assignment_statement CLOSE_BRACKET .

    $default  reduce using rule 37 (whileexp)


State 145

   25 switch_statement: SWITCH OPEN_BRACKET normal_expression CLOSE_BRACKET OPEN_CURLY . case_list CLOSE_CURLY

    CASE  shift, and go to state 155

    case_list        go to state 156
    case_list_minor  go to state 157
    case_statement   go to state 158
    case_name        go to state 159


State 146

   75 elist_func_call: elist_func_call COMMA expression .

    $default  reduce using rule 75 (elist_func_call)


State 147

   70 elist: elist OPEN_SQUARE expression CLOSE_SQUARE .

    $default  reduce using rule 70 (elist)


State 148

   92 unit_declaration: type ID OPEN_SQUARE . CLOSE_SQUARE

    CLOSE_SQUARE  shift, and go to state 160


State 149

   89 param_decl: param_decl COMMA unit_declaration .

    $default  reduce using rule 89 (param_decl)


State 150

   86 new_num_list: OPEN_SQUARE NUM CLOSE_SQUARE .

    $default  reduce using rule 86 (new_num_list)


State 151

   85 new_num_list: new_num_list OPEN_SQUARE NUM . CLOSE_SQUARE

    CLOSE_SQUARE  shift, and go to state 161


State 152

   23 selection_statement: ifexp statement ELSE N M . statement

    FOR           shift, and go to state 5
    IF            shift, and go to state 6
    RETURN        shift, and go to state 7
    WHILE         shift, and go to state 8
    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    BREAK         shift, and go to state 11
    CONTINUE      shift, and go to state 12
    NOT           shift, and go to state 13
    OPEN_BRACKET  shift, and go to state 14
    OPEN_CURLY    shift, and go to state 15
    MINUS         shift, and go to state 16
    SWITCH        shift, and go to state 17
    ID            shift, and go to state 18
    INT           shift, and go to state 19
    FLOAT         shift, and go to state 20
    VOID          shift, and go to state 21
    NUM           shift, and go to state 22
    REAL          shift, and go to state 23

    $default  reduce using rule 79 (assignment_statement)

    function_declaration    go to state 24
    first_curly             go to state 25
    function_head           go to state 26
    res_id                  go to state 27
    type                    go to state 28
    statement               go to state 162
    selection_statement     go to state 30
    switch_statement        go to state 31
    ifexp                   go to state 32
    iteration_statement     go to state 33
    whileexp                go to state 34
    forexp                  go to state 35
    conditional_expression  go to state 36
    expression              go to state 37
    rel_expression          go to state 38
    normal_expression       go to state 39
    term                    go to state 40
    factor                  go to state 41
    unary_expression        go to state 42
    primary_expression      go to state 43
    func_call               go to state 44
    assignment_statement    go to state 45
    variable_declaration    go to state 46
    id_arr                  go to state 47


State 153

   36 iteration_statement: forexp M assignment_statement M M . CLOSE_BRACKET statement

    CLOSE_BRACKET  shift, and go to state 163


State 154

   38 forexp: FOR OPEN_BRACKET assignment_statement SEMI M assignment_statement . SEMI

    SEMI  shift, and go to state 164


State 155

   33 case_name: CASE .

    $default  reduce using rule 33 (case_name)


State 156

   25 switch_statement: SWITCH OPEN_BRACKET normal_expression CLOSE_BRACKET OPEN_CURLY case_list . CLOSE_CURLY

    CLOSE_CURLY  shift, and go to state 165


State 157

   26 case_list: case_list_minor . default_statement
   27          | case_list_minor .
   28 case_list_minor: case_list_minor . case_statement

    CASE     shift, and go to state 155
    DEFAULT  shift, and go to state 166

    $default  reduce using rule 27 (case_list)

    default_statement  go to state 167
    default_name       go to state 168
    case_statement     go to state 169
    case_name          go to state 159


State 158

   29 case_list_minor: case_statement .

    $default  reduce using rule 29 (case_list_minor)


State 159

   32 case_statement: case_name . normal_expression COLON N_new M statement

    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 13
    OPEN_BRACKET  shift, and go to state 14
    MINUS         shift, and go to state 16
    ID            shift, and go to state 18
    NUM           shift, and go to state 22
    REAL          shift, and go to state 23

    normal_expression   go to state 170
    term                go to state 40
    factor              go to state 41
    unary_expression    go to state 42
    primary_expression  go to state 43
    func_call           go to state 44
    id_arr              go to state 52


State 160

   92 unit_declaration: type ID OPEN_SQUARE CLOSE_SQUARE .

    $default  reduce using rule 92 (unit_declaration)


State 161

   85 new_num_list: new_num_list OPEN_SQUARE NUM CLOSE_SQUARE .

    $default  reduce using rule 85 (new_num_list)


State 162

   23 selection_statement: ifexp statement ELSE N M statement .

    $default  reduce using rule 23 (selection_statement)


State 163

   36 iteration_statement: forexp M assignment_statement M M CLOSE_BRACKET . statement

    FOR           shift, and go to state 5
    IF            shift, and go to state 6
    RETURN        shift, and go to state 7
    WHILE         shift, and go to state 8
    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    BREAK         shift, and go to state 11
    CONTINUE      shift, and go to state 12
    NOT           shift, and go to state 13
    OPEN_BRACKET  shift, and go to state 14
    OPEN_CURLY    shift, and go to state 15
    MINUS         shift, and go to state 16
    SWITCH        shift, and go to state 17
    ID            shift, and go to state 18
    INT           shift, and go to state 19
    FLOAT         shift, and go to state 20
    VOID          shift, and go to state 21
    NUM           shift, and go to state 22
    REAL          shift, and go to state 23

    $default  reduce using rule 79 (assignment_statement)

    function_declaration    go to state 24
    first_curly             go to state 25
    function_head           go to state 26
    res_id                  go to state 27
    type                    go to state 28
    statement               go to state 171
    selection_statement     go to state 30
    switch_statement        go to state 31
    ifexp                   go to state 32
    iteration_statement     go to state 33
    whileexp                go to state 34
    forexp                  go to state 35
    conditional_expression  go to state 36
    expression              go to state 37
    rel_expression          go to state 38
    normal_expression       go to state 39
    term                    go to state 40
    factor                  go to state 41
    unary_expression        go to state 42
    primary_expression      go to state 43
    func_call               go to state 44
    assignment_statement    go to state 45
    variable_declaration    go to state 46
    id_arr                  go to state 47


State 164

   38 forexp: FOR OPEN_BRACKET assignment_statement SEMI M assignment_statement SEMI .

    $default  reduce using rule 38 (forexp)


State 165

   25 switch_statement: SWITCH OPEN_BRACKET normal_expression CLOSE_BRACKET OPEN_CURLY case_list CLOSE_CURLY .

    $default  reduce using rule 25 (switch_statement)


State 166

   31 default_name: DEFAULT . COLON

    COLON  shift, and go to state 172


State 167

   26 case_list: case_list_minor default_statement .

    $default  reduce using rule 26 (case_list)


State 168

   30 default_statement: default_name . statement

    FOR           shift, and go to state 5
    IF            shift, and go to state 6
    RETURN        shift, and go to state 7
    WHILE         shift, and go to state 8
    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    BREAK         shift, and go to state 11
    CONTINUE      shift, and go to state 12
    NOT           shift, and go to state 13
    OPEN_BRACKET  shift, and go to state 14
    OPEN_CURLY    shift, and go to state 15
    MINUS         shift, and go to state 16
    SWITCH        shift, and go to state 17
    ID            shift, and go to state 18
    INT           shift, and go to state 19
    FLOAT         shift, and go to state 20
    VOID          shift, and go to state 21
    NUM           shift, and go to state 22
    REAL          shift, and go to state 23

    $default  reduce using rule 79 (assignment_statement)

    function_declaration    go to state 24
    first_curly             go to state 25
    function_head           go to state 26
    res_id                  go to state 27
    type                    go to state 28
    statement               go to state 173
    selection_statement     go to state 30
    switch_statement        go to state 31
    ifexp                   go to state 32
    iteration_statement     go to state 33
    whileexp                go to state 34
    forexp                  go to state 35
    conditional_expression  go to state 36
    expression              go to state 37
    rel_expression          go to state 38
    normal_expression       go to state 39
    term                    go to state 40
    factor                  go to state 41
    unary_expression        go to state 42
    primary_expression      go to state 43
    func_call               go to state 44
    assignment_statement    go to state 45
    variable_declaration    go to state 46
    id_arr                  go to state 47


State 169

   28 case_list_minor: case_list_minor case_statement .

    $default  reduce using rule 28 (case_list_minor)


State 170

   32 case_statement: case_name normal_expression . COLON N_new M statement
   53 normal_expression: normal_expression . PLUS term
   54                  | normal_expression . MINUS term

    PLUS   shift, and go to state 82
    MINUS  shift, and go to state 83
    COLON  shift, and go to state 174


State 171

   36 iteration_statement: forexp M assignment_statement M M CLOSE_BRACKET statement .

    $default  reduce using rule 36 (iteration_statement)


State 172

   31 default_name: DEFAULT COLON .

    $default  reduce using rule 31 (default_name)


State 173

   30 default_statement: default_name statement .

    $default  reduce using rule 30 (default_statement)


State 174

   32 case_statement: case_name normal_expression COLON . N_new M statement

    $default  reduce using rule 39 (N_new)

    N_new  go to state 175


State 175

   32 case_statement: case_name normal_expression COLON N_new . M statement

    $default  reduce using rule 40 (M)

    M  go to state 176


State 176

   32 case_statement: case_name normal_expression COLON N_new M . statement

    FOR           shift, and go to state 5
    IF            shift, and go to state 6
    RETURN        shift, and go to state 7
    WHILE         shift, and go to state 8
    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    BREAK         shift, and go to state 11
    CONTINUE      shift, and go to state 12
    NOT           shift, and go to state 13
    OPEN_BRACKET  shift, and go to state 14
    OPEN_CURLY    shift, and go to state 15
    MINUS         shift, and go to state 16
    SWITCH        shift, and go to state 17
    ID            shift, and go to state 18
    INT           shift, and go to state 19
    FLOAT         shift, and go to state 20
    VOID          shift, and go to state 21
    NUM           shift, and go to state 22
    REAL          shift, and go to state 23

    $default  reduce using rule 79 (assignment_statement)

    function_declaration    go to state 24
    first_curly             go to state 25
    function_head           go to state 26
    res_id                  go to state 27
    type                    go to state 28
    statement               go to state 177
    selection_statement     go to state 30
    switch_statement        go to state 31
    ifexp                   go to state 32
    iteration_statement     go to state 33
    whileexp                go to state 34
    forexp                  go to state 35
    conditional_expression  go to state 36
    expression              go to state 37
    rel_expression          go to state 38
    normal_expression       go to state 39
    term                    go to state 40
    factor                  go to state 41
    unary_expression        go to state 42
    primary_expression      go to state 43
    func_call               go to state 44
    assignment_statement    go to state 45
    variable_declaration    go to state 46
    id_arr                  go to state 47


State 177

   32 case_statement: case_name normal_expression COLON N_new M statement .

    $default  reduce using rule 32 (case_statement)
