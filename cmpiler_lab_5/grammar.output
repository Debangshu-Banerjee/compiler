Terminals unused in grammar

   PTR_OP
   DO
   BREAK
   LIBRARY
   CONTINUE
   ERROR
   AMP
   TILDE
   DOT
   MODULUS
   PIPE
   XOR
   QUES
   BOOL
   CHAR


Grammar

    0 $accept: program $end

    1 program: statement_list

    2 function_declaration: function_head first_curly statement_list last_curly

    3 first_curly: OPEN_CURLY

    4 last_curly: CLOSE_CURLY

    5 function_head: res_id OPEN_BRACKET parameter_list CLOSE_BRACKET

    6 res_id: type ID

    7 type: INT
    8     | FLOAT
    9     | VOID

   10 statement_list: statement_list M statement
   11               | %empty

   12 statement: variable_declaration SEMI
   13          | RETURN SEMI
   14          | RETURN conditional_expression SEMI
   15          | selection_statement
   16          | iteration_statement
   17          | assignment_statement SEMI
   18          | first_curly statement_list last_curly
   19          | switch_statement
   20          | function_declaration

   21 selection_statement: ifexp statement ELSE N M statement
   22                    | ifexp statement

   23 switch_statement: SWITCH OPEN_BRACKET normal_expression CLOSE_BRACKET OPEN_CURLY case_list CLOSE_CURLY

   24 case_list: case_list_minor default_statement
   25          | case_list_minor

   26 case_list_minor: case_list_minor case_statement
   27                | case_statement

   28 default_statement: default_name statement

   29 default_name: DEFAULT COLON

   30 case_statement: case_name normal_expression COLON N_new M statement

   31 case_name: CASE

   32 ifexp: IF OPEN_BRACKET assignment_statement CLOSE_BRACKET

   33 iteration_statement: whileexp statement
   34                    | forexp M assignment_statement M CLOSE_BRACKET statement

   35 whileexp: WHILE M OPEN_BRACKET assignment_statement CLOSE_BRACKET

   36 forexp: FOR OPEN_BRACKET assignment_statement SEMI M assignment_statement SEMI

   37 N_new: %empty

   38 M: %empty

   39 N: %empty

   40 conditional_expression: conditional_expression AND_OP expression
   41                       | conditional_expression OR_OP expression
   42                       | expression

   43 expression: rel_expression
   44           | normal_expression

   45 rel_expression: normal_expression GT normal_expression
   46               | normal_expression LT normal_expression
   47               | normal_expression GE_OP normal_expression
   48               | normal_expression LE_OP normal_expression
   49               | normal_expression EQ_OP normal_expression
   50               | normal_expression NE_OP normal_expression

   51 normal_expression: normal_expression PLUS term
   52                  | normal_expression MINUS term
   53                  | term

   54 term: term STAR factor
   55     | term DIVIDE factor
   56     | factor

   57 factor: unary_expression

   58 unary_expression: primary_expression
   59                 | MINUS unary_expression
   60                 | NOT unary_expression
   61                 | DEC_OP unary_expression
   62                 | INC_OP unary_expression

   63 primary_expression: NUM
   64                   | REAL
   65                   | id_arr
   66                   | OPEN_BRACKET conditional_expression CLOSE_BRACKET
   67                   | func_call

   68 elist: elist OPEN_SQUARE expression CLOSE_SQUARE
   69      | OPEN_SQUARE expression CLOSE_SQUARE

   70 func_call: ID OPEN_BRACKET elist_super CLOSE_BRACKET

   71 elist_super: elist_func_call
   72            | %empty

   73 elist_func_call: elist_func_call COMMA expression
   74                | expression

   75 assignment_statement: id_arr ASSIGN conditional_expression
   76                     | conditional_expression
   77                     | %empty

   78 variable_declaration: type varlist

   79 id_arr: ID
   80       | ID elist

   81 id_arr_declare: ID
   82               | ID new_num_list

   83 new_num_list: new_num_list OPEN_SQUARE NUM CLOSE_SQUARE
   84             | OPEN_SQUARE NUM CLOSE_SQUARE

   85 parameter_list: param_decl
   86               | %empty

   87 param_decl: param_decl COMMA unit_declaration
   88           | unit_declaration

   89 unit_declaration: type ID
   90                 | type ID OPEN_SQUARE CLOSE_SQUARE

   91 varlist: varlist COMMA id_arr_declare
   92        | id_arr_declare


Terminals, with rules where they appear

$end (0) 0
error (256)
ELSE (258) 21
FOR (259) 36
IF (260) 32
RETURN (261) 13 14
WHILE (262) 35
PTR_OP (263)
INC_OP (264) 62
DEC_OP (265) 61
AND_OP (266) 40
OR_OP (267) 41
LT (268) 46
GT (269) 45
LE_OP (270) 48
GE_OP (271) 47
EQ_OP (272) 49
NE_OP (273) 50
DO (274)
BREAK (275)
LIBRARY (276)
CONTINUE (277)
ERROR (278)
NOT (279) 60
AMP (280)
TILDE (281)
STAR (282) 54
ASSIGN (283) 75
OPEN_BRACKET (284) 5 23 32 35 36 66 70
CLOSE_BRACKET (285) 5 23 32 34 35 66 70
OPEN_CURLY (286) 3 23
CLOSE_CURLY (287) 4 23
OPEN_SQUARE (288) 68 69 83 84 90
CLOSE_SQUARE (289) 68 69 83 84 90
SEMI (290) 12 13 14 17 36
COMMA (291) 73 87 91
DOT (292)
PLUS (293) 51
MINUS (294) 52 59
DIVIDE (295) 55
MODULUS (296)
PIPE (297)
XOR (298)
QUES (299)
COLON (300) 29 30
SWITCH (301) 23
CASE (302) 31
DEFAULT (303) 29
ID (304) 6 70 79 80 81 82 89 90
BOOL (305)
CHAR (306)
INT (307) 7
FLOAT (308) 8
VOID (309) 9
NUM (310) 63 83 84
REAL (311) 64
"IFS" (312)
"IFX" (313)
UMINUS (314)


Nonterminals, with rules where they appear

$accept (60)
    on left: 0
program (61)
    on left: 1, on right: 0
function_declaration (62)
    on left: 2, on right: 20
first_curly (63)
    on left: 3, on right: 2 18
last_curly (64)
    on left: 4, on right: 2 18
function_head (65)
    on left: 5, on right: 2
res_id (66)
    on left: 6, on right: 5
type (67)
    on left: 7 8 9, on right: 6 78 89 90
statement_list (68)
    on left: 10 11, on right: 1 2 10 18
statement (69)
    on left: 12 13 14 15 16 17 18 19 20, on right: 10 21 22 28 30 33
    34
selection_statement (70)
    on left: 21 22, on right: 15
switch_statement (71)
    on left: 23, on right: 19
case_list (72)
    on left: 24 25, on right: 23
case_list_minor (73)
    on left: 26 27, on right: 24 25 26
default_statement (74)
    on left: 28, on right: 24
default_name (75)
    on left: 29, on right: 28
case_statement (76)
    on left: 30, on right: 26 27
case_name (77)
    on left: 31, on right: 30
ifexp (78)
    on left: 32, on right: 21 22
iteration_statement (79)
    on left: 33 34, on right: 16
whileexp (80)
    on left: 35, on right: 33
forexp (81)
    on left: 36, on right: 34
N_new (82)
    on left: 37, on right: 30
M (83)
    on left: 38, on right: 10 21 30 34 35 36
N (84)
    on left: 39, on right: 21
conditional_expression (85)
    on left: 40 41 42, on right: 14 40 41 66 75 76
expression (86)
    on left: 43 44, on right: 40 41 42 68 69 73 74
rel_expression (87)
    on left: 45 46 47 48 49 50, on right: 43
normal_expression (88)
    on left: 51 52 53, on right: 23 30 44 45 46 47 48 49 50 51 52
term (89)
    on left: 54 55 56, on right: 51 52 53 54 55
factor (90)
    on left: 57, on right: 54 55 56
unary_expression (91)
    on left: 58 59 60 61 62, on right: 57 59 60 61 62
primary_expression (92)
    on left: 63 64 65 66 67, on right: 58
elist (93)
    on left: 68 69, on right: 68 80
func_call (94)
    on left: 70, on right: 67
elist_super (95)
    on left: 71 72, on right: 70
elist_func_call (96)
    on left: 73 74, on right: 71 73
assignment_statement (97)
    on left: 75 76 77, on right: 17 32 34 35 36
variable_declaration (98)
    on left: 78, on right: 12
id_arr (99)
    on left: 79 80, on right: 65 75
id_arr_declare (100)
    on left: 81 82, on right: 91 92
new_num_list (101)
    on left: 83 84, on right: 82 83
parameter_list (102)
    on left: 85 86, on right: 5
param_decl (103)
    on left: 87 88, on right: 85 87
unit_declaration (104)
    on left: 89 90, on right: 87 88
varlist (105)
    on left: 91 92, on right: 78 91


State 0

    0 $accept: . program $end

    $default  reduce using rule 11 (statement_list)

    program         go to state 1
    statement_list  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: statement_list .
   10 statement_list: statement_list . M statement

    $end      reduce using rule 1 (program)
    $default  reduce using rule 38 (M)

    M  go to state 4


State 3

    0 $accept: program $end .

    $default  accept


State 4

   10 statement_list: statement_list M . statement

    FOR           shift, and go to state 5
    IF            shift, and go to state 6
    RETURN        shift, and go to state 7
    WHILE         shift, and go to state 8
    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 11
    OPEN_BRACKET  shift, and go to state 12
    OPEN_CURLY    shift, and go to state 13
    MINUS         shift, and go to state 14
    SWITCH        shift, and go to state 15
    ID            shift, and go to state 16
    INT           shift, and go to state 17
    FLOAT         shift, and go to state 18
    VOID          shift, and go to state 19
    NUM           shift, and go to state 20
    REAL          shift, and go to state 21

    $default  reduce using rule 77 (assignment_statement)

    function_declaration    go to state 22
    first_curly             go to state 23
    function_head           go to state 24
    res_id                  go to state 25
    type                    go to state 26
    statement               go to state 27
    selection_statement     go to state 28
    switch_statement        go to state 29
    ifexp                   go to state 30
    iteration_statement     go to state 31
    whileexp                go to state 32
    forexp                  go to state 33
    conditional_expression  go to state 34
    expression              go to state 35
    rel_expression          go to state 36
    normal_expression       go to state 37
    term                    go to state 38
    factor                  go to state 39
    unary_expression        go to state 40
    primary_expression      go to state 41
    func_call               go to state 42
    assignment_statement    go to state 43
    variable_declaration    go to state 44
    id_arr                  go to state 45


State 5

   36 forexp: FOR . OPEN_BRACKET assignment_statement SEMI M assignment_statement SEMI

    OPEN_BRACKET  shift, and go to state 46


State 6

   32 ifexp: IF . OPEN_BRACKET assignment_statement CLOSE_BRACKET

    OPEN_BRACKET  shift, and go to state 47


State 7

   13 statement: RETURN . SEMI
   14          | RETURN . conditional_expression SEMI

    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 11
    OPEN_BRACKET  shift, and go to state 12
    SEMI          shift, and go to state 48
    MINUS         shift, and go to state 14
    ID            shift, and go to state 16
    NUM           shift, and go to state 20
    REAL          shift, and go to state 21

    conditional_expression  go to state 49
    expression              go to state 35
    rel_expression          go to state 36
    normal_expression       go to state 37
    term                    go to state 38
    factor                  go to state 39
    unary_expression        go to state 40
    primary_expression      go to state 41
    func_call               go to state 42
    id_arr                  go to state 50


State 8

   35 whileexp: WHILE . M OPEN_BRACKET assignment_statement CLOSE_BRACKET

    $default  reduce using rule 38 (M)

    M  go to state 51


State 9

   62 unary_expression: INC_OP . unary_expression

    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 11
    OPEN_BRACKET  shift, and go to state 12
    MINUS         shift, and go to state 14
    ID            shift, and go to state 16
    NUM           shift, and go to state 20
    REAL          shift, and go to state 21

    unary_expression    go to state 52
    primary_expression  go to state 41
    func_call           go to state 42
    id_arr              go to state 50


State 10

   61 unary_expression: DEC_OP . unary_expression

    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 11
    OPEN_BRACKET  shift, and go to state 12
    MINUS         shift, and go to state 14
    ID            shift, and go to state 16
    NUM           shift, and go to state 20
    REAL          shift, and go to state 21

    unary_expression    go to state 53
    primary_expression  go to state 41
    func_call           go to state 42
    id_arr              go to state 50


State 11

   60 unary_expression: NOT . unary_expression

    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 11
    OPEN_BRACKET  shift, and go to state 12
    MINUS         shift, and go to state 14
    ID            shift, and go to state 16
    NUM           shift, and go to state 20
    REAL          shift, and go to state 21

    unary_expression    go to state 54
    primary_expression  go to state 41
    func_call           go to state 42
    id_arr              go to state 50


State 12

   66 primary_expression: OPEN_BRACKET . conditional_expression CLOSE_BRACKET

    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 11
    OPEN_BRACKET  shift, and go to state 12
    MINUS         shift, and go to state 14
    ID            shift, and go to state 16
    NUM           shift, and go to state 20
    REAL          shift, and go to state 21

    conditional_expression  go to state 55
    expression              go to state 35
    rel_expression          go to state 36
    normal_expression       go to state 37
    term                    go to state 38
    factor                  go to state 39
    unary_expression        go to state 40
    primary_expression      go to state 41
    func_call               go to state 42
    id_arr                  go to state 50


State 13

    3 first_curly: OPEN_CURLY .

    $default  reduce using rule 3 (first_curly)


State 14

   59 unary_expression: MINUS . unary_expression

    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 11
    OPEN_BRACKET  shift, and go to state 12
    MINUS         shift, and go to state 14
    ID            shift, and go to state 16
    NUM           shift, and go to state 20
    REAL          shift, and go to state 21

    unary_expression    go to state 56
    primary_expression  go to state 41
    func_call           go to state 42
    id_arr              go to state 50


State 15

   23 switch_statement: SWITCH . OPEN_BRACKET normal_expression CLOSE_BRACKET OPEN_CURLY case_list CLOSE_CURLY

    OPEN_BRACKET  shift, and go to state 57


State 16

   70 func_call: ID . OPEN_BRACKET elist_super CLOSE_BRACKET
   79 id_arr: ID .
   80       | ID . elist

    OPEN_BRACKET  shift, and go to state 58
    OPEN_SQUARE   shift, and go to state 59

    $default  reduce using rule 79 (id_arr)

    elist  go to state 60


State 17

    7 type: INT .

    $default  reduce using rule 7 (type)


State 18

    8 type: FLOAT .

    $default  reduce using rule 8 (type)


State 19

    9 type: VOID .

    $default  reduce using rule 9 (type)


State 20

   63 primary_expression: NUM .

    $default  reduce using rule 63 (primary_expression)


State 21

   64 primary_expression: REAL .

    $default  reduce using rule 64 (primary_expression)


State 22

   20 statement: function_declaration .

    $default  reduce using rule 20 (statement)


State 23

   18 statement: first_curly . statement_list last_curly

    $default  reduce using rule 11 (statement_list)

    statement_list  go to state 61


State 24

    2 function_declaration: function_head . first_curly statement_list last_curly

    OPEN_CURLY  shift, and go to state 13

    first_curly  go to state 62


State 25

    5 function_head: res_id . OPEN_BRACKET parameter_list CLOSE_BRACKET

    OPEN_BRACKET  shift, and go to state 63


State 26

    6 res_id: type . ID
   78 variable_declaration: type . varlist

    ID  shift, and go to state 64

    id_arr_declare  go to state 65
    varlist         go to state 66


State 27

   10 statement_list: statement_list M statement .

    $default  reduce using rule 10 (statement_list)


State 28

   15 statement: selection_statement .

    $default  reduce using rule 15 (statement)


State 29

   19 statement: switch_statement .

    $default  reduce using rule 19 (statement)


State 30

   21 selection_statement: ifexp . statement ELSE N M statement
   22                    | ifexp . statement

    FOR           shift, and go to state 5
    IF            shift, and go to state 6
    RETURN        shift, and go to state 7
    WHILE         shift, and go to state 8
    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 11
    OPEN_BRACKET  shift, and go to state 12
    OPEN_CURLY    shift, and go to state 13
    MINUS         shift, and go to state 14
    SWITCH        shift, and go to state 15
    ID            shift, and go to state 16
    INT           shift, and go to state 17
    FLOAT         shift, and go to state 18
    VOID          shift, and go to state 19
    NUM           shift, and go to state 20
    REAL          shift, and go to state 21

    $default  reduce using rule 77 (assignment_statement)

    function_declaration    go to state 22
    first_curly             go to state 23
    function_head           go to state 24
    res_id                  go to state 25
    type                    go to state 26
    statement               go to state 67
    selection_statement     go to state 28
    switch_statement        go to state 29
    ifexp                   go to state 30
    iteration_statement     go to state 31
    whileexp                go to state 32
    forexp                  go to state 33
    conditional_expression  go to state 34
    expression              go to state 35
    rel_expression          go to state 36
    normal_expression       go to state 37
    term                    go to state 38
    factor                  go to state 39
    unary_expression        go to state 40
    primary_expression      go to state 41
    func_call               go to state 42
    assignment_statement    go to state 43
    variable_declaration    go to state 44
    id_arr                  go to state 45


State 31

   16 statement: iteration_statement .

    $default  reduce using rule 16 (statement)


State 32

   33 iteration_statement: whileexp . statement

    FOR           shift, and go to state 5
    IF            shift, and go to state 6
    RETURN        shift, and go to state 7
    WHILE         shift, and go to state 8
    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 11
    OPEN_BRACKET  shift, and go to state 12
    OPEN_CURLY    shift, and go to state 13
    MINUS         shift, and go to state 14
    SWITCH        shift, and go to state 15
    ID            shift, and go to state 16
    INT           shift, and go to state 17
    FLOAT         shift, and go to state 18
    VOID          shift, and go to state 19
    NUM           shift, and go to state 20
    REAL          shift, and go to state 21

    $default  reduce using rule 77 (assignment_statement)

    function_declaration    go to state 22
    first_curly             go to state 23
    function_head           go to state 24
    res_id                  go to state 25
    type                    go to state 26
    statement               go to state 68
    selection_statement     go to state 28
    switch_statement        go to state 29
    ifexp                   go to state 30
    iteration_statement     go to state 31
    whileexp                go to state 32
    forexp                  go to state 33
    conditional_expression  go to state 34
    expression              go to state 35
    rel_expression          go to state 36
    normal_expression       go to state 37
    term                    go to state 38
    factor                  go to state 39
    unary_expression        go to state 40
    primary_expression      go to state 41
    func_call               go to state 42
    assignment_statement    go to state 43
    variable_declaration    go to state 44
    id_arr                  go to state 45


State 33

   34 iteration_statement: forexp . M assignment_statement M CLOSE_BRACKET statement

    $default  reduce using rule 38 (M)

    M  go to state 69


State 34

   40 conditional_expression: conditional_expression . AND_OP expression
   41                       | conditional_expression . OR_OP expression
   76 assignment_statement: conditional_expression .

    AND_OP  shift, and go to state 70
    OR_OP   shift, and go to state 71

    $default  reduce using rule 76 (assignment_statement)


State 35

   42 conditional_expression: expression .

    $default  reduce using rule 42 (conditional_expression)


State 36

   43 expression: rel_expression .

    $default  reduce using rule 43 (expression)


State 37

   44 expression: normal_expression .
   45 rel_expression: normal_expression . GT normal_expression
   46               | normal_expression . LT normal_expression
   47               | normal_expression . GE_OP normal_expression
   48               | normal_expression . LE_OP normal_expression
   49               | normal_expression . EQ_OP normal_expression
   50               | normal_expression . NE_OP normal_expression
   51 normal_expression: normal_expression . PLUS term
   52                  | normal_expression . MINUS term

    LT     shift, and go to state 72
    GT     shift, and go to state 73
    LE_OP  shift, and go to state 74
    GE_OP  shift, and go to state 75
    EQ_OP  shift, and go to state 76
    NE_OP  shift, and go to state 77
    PLUS   shift, and go to state 78
    MINUS  shift, and go to state 79

    $default  reduce using rule 44 (expression)


State 38

   53 normal_expression: term .
   54 term: term . STAR factor
   55     | term . DIVIDE factor

    STAR    shift, and go to state 80
    DIVIDE  shift, and go to state 81

    $default  reduce using rule 53 (normal_expression)


State 39

   56 term: factor .

    $default  reduce using rule 56 (term)


State 40

   57 factor: unary_expression .

    $default  reduce using rule 57 (factor)


State 41

   58 unary_expression: primary_expression .

    $default  reduce using rule 58 (unary_expression)


State 42

   67 primary_expression: func_call .

    $default  reduce using rule 67 (primary_expression)


State 43

   17 statement: assignment_statement . SEMI

    SEMI  shift, and go to state 82


State 44

   12 statement: variable_declaration . SEMI

    SEMI  shift, and go to state 83


State 45

   65 primary_expression: id_arr .
   75 assignment_statement: id_arr . ASSIGN conditional_expression

    ASSIGN  shift, and go to state 84

    $default  reduce using rule 65 (primary_expression)


State 46

   36 forexp: FOR OPEN_BRACKET . assignment_statement SEMI M assignment_statement SEMI

    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 11
    OPEN_BRACKET  shift, and go to state 12
    MINUS         shift, and go to state 14
    ID            shift, and go to state 16
    NUM           shift, and go to state 20
    REAL          shift, and go to state 21

    $default  reduce using rule 77 (assignment_statement)

    conditional_expression  go to state 34
    expression              go to state 35
    rel_expression          go to state 36
    normal_expression       go to state 37
    term                    go to state 38
    factor                  go to state 39
    unary_expression        go to state 40
    primary_expression      go to state 41
    func_call               go to state 42
    assignment_statement    go to state 85
    id_arr                  go to state 45


State 47

   32 ifexp: IF OPEN_BRACKET . assignment_statement CLOSE_BRACKET

    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 11
    OPEN_BRACKET  shift, and go to state 12
    MINUS         shift, and go to state 14
    ID            shift, and go to state 16
    NUM           shift, and go to state 20
    REAL          shift, and go to state 21

    $default  reduce using rule 77 (assignment_statement)

    conditional_expression  go to state 34
    expression              go to state 35
    rel_expression          go to state 36
    normal_expression       go to state 37
    term                    go to state 38
    factor                  go to state 39
    unary_expression        go to state 40
    primary_expression      go to state 41
    func_call               go to state 42
    assignment_statement    go to state 86
    id_arr                  go to state 45


State 48

   13 statement: RETURN SEMI .

    $default  reduce using rule 13 (statement)


State 49

   14 statement: RETURN conditional_expression . SEMI
   40 conditional_expression: conditional_expression . AND_OP expression
   41                       | conditional_expression . OR_OP expression

    AND_OP  shift, and go to state 70
    OR_OP   shift, and go to state 71
    SEMI    shift, and go to state 87


State 50

   65 primary_expression: id_arr .

    $default  reduce using rule 65 (primary_expression)


State 51

   35 whileexp: WHILE M . OPEN_BRACKET assignment_statement CLOSE_BRACKET

    OPEN_BRACKET  shift, and go to state 88


State 52

   62 unary_expression: INC_OP unary_expression .

    $default  reduce using rule 62 (unary_expression)


State 53

   61 unary_expression: DEC_OP unary_expression .

    $default  reduce using rule 61 (unary_expression)


State 54

   60 unary_expression: NOT unary_expression .

    $default  reduce using rule 60 (unary_expression)


State 55

   40 conditional_expression: conditional_expression . AND_OP expression
   41                       | conditional_expression . OR_OP expression
   66 primary_expression: OPEN_BRACKET conditional_expression . CLOSE_BRACKET

    AND_OP         shift, and go to state 70
    OR_OP          shift, and go to state 71
    CLOSE_BRACKET  shift, and go to state 89


State 56

   59 unary_expression: MINUS unary_expression .

    $default  reduce using rule 59 (unary_expression)


State 57

   23 switch_statement: SWITCH OPEN_BRACKET . normal_expression CLOSE_BRACKET OPEN_CURLY case_list CLOSE_CURLY

    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 11
    OPEN_BRACKET  shift, and go to state 12
    MINUS         shift, and go to state 14
    ID            shift, and go to state 16
    NUM           shift, and go to state 20
    REAL          shift, and go to state 21

    normal_expression   go to state 90
    term                go to state 38
    factor              go to state 39
    unary_expression    go to state 40
    primary_expression  go to state 41
    func_call           go to state 42
    id_arr              go to state 50


State 58

   70 func_call: ID OPEN_BRACKET . elist_super CLOSE_BRACKET

    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 11
    OPEN_BRACKET  shift, and go to state 12
    MINUS         shift, and go to state 14
    ID            shift, and go to state 16
    NUM           shift, and go to state 20
    REAL          shift, and go to state 21

    $default  reduce using rule 72 (elist_super)

    expression          go to state 91
    rel_expression      go to state 36
    normal_expression   go to state 37
    term                go to state 38
    factor              go to state 39
    unary_expression    go to state 40
    primary_expression  go to state 41
    func_call           go to state 42
    elist_super         go to state 92
    elist_func_call     go to state 93
    id_arr              go to state 50


State 59

   69 elist: OPEN_SQUARE . expression CLOSE_SQUARE

    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 11
    OPEN_BRACKET  shift, and go to state 12
    MINUS         shift, and go to state 14
    ID            shift, and go to state 16
    NUM           shift, and go to state 20
    REAL          shift, and go to state 21

    expression          go to state 94
    rel_expression      go to state 36
    normal_expression   go to state 37
    term                go to state 38
    factor              go to state 39
    unary_expression    go to state 40
    primary_expression  go to state 41
    func_call           go to state 42
    id_arr              go to state 50


State 60

   68 elist: elist . OPEN_SQUARE expression CLOSE_SQUARE
   80 id_arr: ID elist .

    OPEN_SQUARE  shift, and go to state 95

    $default  reduce using rule 80 (id_arr)


State 61

   10 statement_list: statement_list . M statement
   18 statement: first_curly statement_list . last_curly

    CLOSE_CURLY  shift, and go to state 96

    $default  reduce using rule 38 (M)

    last_curly  go to state 97
    M           go to state 4


State 62

    2 function_declaration: function_head first_curly . statement_list last_curly

    $default  reduce using rule 11 (statement_list)

    statement_list  go to state 98


State 63

    5 function_head: res_id OPEN_BRACKET . parameter_list CLOSE_BRACKET

    INT    shift, and go to state 17
    FLOAT  shift, and go to state 18
    VOID   shift, and go to state 19

    $default  reduce using rule 86 (parameter_list)

    type              go to state 99
    parameter_list    go to state 100
    param_decl        go to state 101
    unit_declaration  go to state 102


State 64

    6 res_id: type ID .
   81 id_arr_declare: ID .
   82               | ID . new_num_list

    OPEN_SQUARE  shift, and go to state 103

    OPEN_BRACKET  reduce using rule 6 (res_id)
    $default      reduce using rule 81 (id_arr_declare)

    new_num_list  go to state 104


State 65

   92 varlist: id_arr_declare .

    $default  reduce using rule 92 (varlist)


State 66

   78 variable_declaration: type varlist .
   91 varlist: varlist . COMMA id_arr_declare

    COMMA  shift, and go to state 105

    $default  reduce using rule 78 (variable_declaration)


State 67

   21 selection_statement: ifexp statement . ELSE N M statement
   22                    | ifexp statement .

    ELSE  shift, and go to state 106

    $default  reduce using rule 22 (selection_statement)


State 68

   33 iteration_statement: whileexp statement .

    $default  reduce using rule 33 (iteration_statement)


State 69

   34 iteration_statement: forexp M . assignment_statement M CLOSE_BRACKET statement

    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 11
    OPEN_BRACKET  shift, and go to state 12
    MINUS         shift, and go to state 14
    ID            shift, and go to state 16
    NUM           shift, and go to state 20
    REAL          shift, and go to state 21

    $default  reduce using rule 77 (assignment_statement)

    conditional_expression  go to state 34
    expression              go to state 35
    rel_expression          go to state 36
    normal_expression       go to state 37
    term                    go to state 38
    factor                  go to state 39
    unary_expression        go to state 40
    primary_expression      go to state 41
    func_call               go to state 42
    assignment_statement    go to state 107
    id_arr                  go to state 45


State 70

   40 conditional_expression: conditional_expression AND_OP . expression

    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 11
    OPEN_BRACKET  shift, and go to state 12
    MINUS         shift, and go to state 14
    ID            shift, and go to state 16
    NUM           shift, and go to state 20
    REAL          shift, and go to state 21

    expression          go to state 108
    rel_expression      go to state 36
    normal_expression   go to state 37
    term                go to state 38
    factor              go to state 39
    unary_expression    go to state 40
    primary_expression  go to state 41
    func_call           go to state 42
    id_arr              go to state 50


State 71

   41 conditional_expression: conditional_expression OR_OP . expression

    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 11
    OPEN_BRACKET  shift, and go to state 12
    MINUS         shift, and go to state 14
    ID            shift, and go to state 16
    NUM           shift, and go to state 20
    REAL          shift, and go to state 21

    expression          go to state 109
    rel_expression      go to state 36
    normal_expression   go to state 37
    term                go to state 38
    factor              go to state 39
    unary_expression    go to state 40
    primary_expression  go to state 41
    func_call           go to state 42
    id_arr              go to state 50


State 72

   46 rel_expression: normal_expression LT . normal_expression

    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 11
    OPEN_BRACKET  shift, and go to state 12
    MINUS         shift, and go to state 14
    ID            shift, and go to state 16
    NUM           shift, and go to state 20
    REAL          shift, and go to state 21

    normal_expression   go to state 110
    term                go to state 38
    factor              go to state 39
    unary_expression    go to state 40
    primary_expression  go to state 41
    func_call           go to state 42
    id_arr              go to state 50


State 73

   45 rel_expression: normal_expression GT . normal_expression

    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 11
    OPEN_BRACKET  shift, and go to state 12
    MINUS         shift, and go to state 14
    ID            shift, and go to state 16
    NUM           shift, and go to state 20
    REAL          shift, and go to state 21

    normal_expression   go to state 111
    term                go to state 38
    factor              go to state 39
    unary_expression    go to state 40
    primary_expression  go to state 41
    func_call           go to state 42
    id_arr              go to state 50


State 74

   48 rel_expression: normal_expression LE_OP . normal_expression

    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 11
    OPEN_BRACKET  shift, and go to state 12
    MINUS         shift, and go to state 14
    ID            shift, and go to state 16
    NUM           shift, and go to state 20
    REAL          shift, and go to state 21

    normal_expression   go to state 112
    term                go to state 38
    factor              go to state 39
    unary_expression    go to state 40
    primary_expression  go to state 41
    func_call           go to state 42
    id_arr              go to state 50


State 75

   47 rel_expression: normal_expression GE_OP . normal_expression

    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 11
    OPEN_BRACKET  shift, and go to state 12
    MINUS         shift, and go to state 14
    ID            shift, and go to state 16
    NUM           shift, and go to state 20
    REAL          shift, and go to state 21

    normal_expression   go to state 113
    term                go to state 38
    factor              go to state 39
    unary_expression    go to state 40
    primary_expression  go to state 41
    func_call           go to state 42
    id_arr              go to state 50


State 76

   49 rel_expression: normal_expression EQ_OP . normal_expression

    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 11
    OPEN_BRACKET  shift, and go to state 12
    MINUS         shift, and go to state 14
    ID            shift, and go to state 16
    NUM           shift, and go to state 20
    REAL          shift, and go to state 21

    normal_expression   go to state 114
    term                go to state 38
    factor              go to state 39
    unary_expression    go to state 40
    primary_expression  go to state 41
    func_call           go to state 42
    id_arr              go to state 50


State 77

   50 rel_expression: normal_expression NE_OP . normal_expression

    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 11
    OPEN_BRACKET  shift, and go to state 12
    MINUS         shift, and go to state 14
    ID            shift, and go to state 16
    NUM           shift, and go to state 20
    REAL          shift, and go to state 21

    normal_expression   go to state 115
    term                go to state 38
    factor              go to state 39
    unary_expression    go to state 40
    primary_expression  go to state 41
    func_call           go to state 42
    id_arr              go to state 50


State 78

   51 normal_expression: normal_expression PLUS . term

    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 11
    OPEN_BRACKET  shift, and go to state 12
    MINUS         shift, and go to state 14
    ID            shift, and go to state 16
    NUM           shift, and go to state 20
    REAL          shift, and go to state 21

    term                go to state 116
    factor              go to state 39
    unary_expression    go to state 40
    primary_expression  go to state 41
    func_call           go to state 42
    id_arr              go to state 50


State 79

   52 normal_expression: normal_expression MINUS . term

    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 11
    OPEN_BRACKET  shift, and go to state 12
    MINUS         shift, and go to state 14
    ID            shift, and go to state 16
    NUM           shift, and go to state 20
    REAL          shift, and go to state 21

    term                go to state 117
    factor              go to state 39
    unary_expression    go to state 40
    primary_expression  go to state 41
    func_call           go to state 42
    id_arr              go to state 50


State 80

   54 term: term STAR . factor

    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 11
    OPEN_BRACKET  shift, and go to state 12
    MINUS         shift, and go to state 14
    ID            shift, and go to state 16
    NUM           shift, and go to state 20
    REAL          shift, and go to state 21

    factor              go to state 118
    unary_expression    go to state 40
    primary_expression  go to state 41
    func_call           go to state 42
    id_arr              go to state 50


State 81

   55 term: term DIVIDE . factor

    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 11
    OPEN_BRACKET  shift, and go to state 12
    MINUS         shift, and go to state 14
    ID            shift, and go to state 16
    NUM           shift, and go to state 20
    REAL          shift, and go to state 21

    factor              go to state 119
    unary_expression    go to state 40
    primary_expression  go to state 41
    func_call           go to state 42
    id_arr              go to state 50


State 82

   17 statement: assignment_statement SEMI .

    $default  reduce using rule 17 (statement)


State 83

   12 statement: variable_declaration SEMI .

    $default  reduce using rule 12 (statement)


State 84

   75 assignment_statement: id_arr ASSIGN . conditional_expression

    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 11
    OPEN_BRACKET  shift, and go to state 12
    MINUS         shift, and go to state 14
    ID            shift, and go to state 16
    NUM           shift, and go to state 20
    REAL          shift, and go to state 21

    conditional_expression  go to state 120
    expression              go to state 35
    rel_expression          go to state 36
    normal_expression       go to state 37
    term                    go to state 38
    factor                  go to state 39
    unary_expression        go to state 40
    primary_expression      go to state 41
    func_call               go to state 42
    id_arr                  go to state 50


State 85

   36 forexp: FOR OPEN_BRACKET assignment_statement . SEMI M assignment_statement SEMI

    SEMI  shift, and go to state 121


State 86

   32 ifexp: IF OPEN_BRACKET assignment_statement . CLOSE_BRACKET

    CLOSE_BRACKET  shift, and go to state 122


State 87

   14 statement: RETURN conditional_expression SEMI .

    $default  reduce using rule 14 (statement)


State 88

   35 whileexp: WHILE M OPEN_BRACKET . assignment_statement CLOSE_BRACKET

    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 11
    OPEN_BRACKET  shift, and go to state 12
    MINUS         shift, and go to state 14
    ID            shift, and go to state 16
    NUM           shift, and go to state 20
    REAL          shift, and go to state 21

    $default  reduce using rule 77 (assignment_statement)

    conditional_expression  go to state 34
    expression              go to state 35
    rel_expression          go to state 36
    normal_expression       go to state 37
    term                    go to state 38
    factor                  go to state 39
    unary_expression        go to state 40
    primary_expression      go to state 41
    func_call               go to state 42
    assignment_statement    go to state 123
    id_arr                  go to state 45


State 89

   66 primary_expression: OPEN_BRACKET conditional_expression CLOSE_BRACKET .

    $default  reduce using rule 66 (primary_expression)


State 90

   23 switch_statement: SWITCH OPEN_BRACKET normal_expression . CLOSE_BRACKET OPEN_CURLY case_list CLOSE_CURLY
   51 normal_expression: normal_expression . PLUS term
   52                  | normal_expression . MINUS term

    CLOSE_BRACKET  shift, and go to state 124
    PLUS           shift, and go to state 78
    MINUS          shift, and go to state 79


State 91

   74 elist_func_call: expression .

    $default  reduce using rule 74 (elist_func_call)


State 92

   70 func_call: ID OPEN_BRACKET elist_super . CLOSE_BRACKET

    CLOSE_BRACKET  shift, and go to state 125


State 93

   71 elist_super: elist_func_call .
   73 elist_func_call: elist_func_call . COMMA expression

    COMMA  shift, and go to state 126

    $default  reduce using rule 71 (elist_super)


State 94

   69 elist: OPEN_SQUARE expression . CLOSE_SQUARE

    CLOSE_SQUARE  shift, and go to state 127


State 95

   68 elist: elist OPEN_SQUARE . expression CLOSE_SQUARE

    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 11
    OPEN_BRACKET  shift, and go to state 12
    MINUS         shift, and go to state 14
    ID            shift, and go to state 16
    NUM           shift, and go to state 20
    REAL          shift, and go to state 21

    expression          go to state 128
    rel_expression      go to state 36
    normal_expression   go to state 37
    term                go to state 38
    factor              go to state 39
    unary_expression    go to state 40
    primary_expression  go to state 41
    func_call           go to state 42
    id_arr              go to state 50


State 96

    4 last_curly: CLOSE_CURLY .

    $default  reduce using rule 4 (last_curly)


State 97

   18 statement: first_curly statement_list last_curly .

    $default  reduce using rule 18 (statement)


State 98

    2 function_declaration: function_head first_curly statement_list . last_curly
   10 statement_list: statement_list . M statement

    CLOSE_CURLY  shift, and go to state 96

    $default  reduce using rule 38 (M)

    last_curly  go to state 129
    M           go to state 4


State 99

   89 unit_declaration: type . ID
   90                 | type . ID OPEN_SQUARE CLOSE_SQUARE

    ID  shift, and go to state 130


State 100

    5 function_head: res_id OPEN_BRACKET parameter_list . CLOSE_BRACKET

    CLOSE_BRACKET  shift, and go to state 131


State 101

   85 parameter_list: param_decl .
   87 param_decl: param_decl . COMMA unit_declaration

    COMMA  shift, and go to state 132

    $default  reduce using rule 85 (parameter_list)


State 102

   88 param_decl: unit_declaration .

    $default  reduce using rule 88 (param_decl)


State 103

   84 new_num_list: OPEN_SQUARE . NUM CLOSE_SQUARE

    NUM  shift, and go to state 133


State 104

   82 id_arr_declare: ID new_num_list .
   83 new_num_list: new_num_list . OPEN_SQUARE NUM CLOSE_SQUARE

    OPEN_SQUARE  shift, and go to state 134

    $default  reduce using rule 82 (id_arr_declare)


State 105

   91 varlist: varlist COMMA . id_arr_declare

    ID  shift, and go to state 135

    id_arr_declare  go to state 136


State 106

   21 selection_statement: ifexp statement ELSE . N M statement

    $default  reduce using rule 39 (N)

    N  go to state 137


State 107

   34 iteration_statement: forexp M assignment_statement . M CLOSE_BRACKET statement

    $default  reduce using rule 38 (M)

    M  go to state 138


State 108

   40 conditional_expression: conditional_expression AND_OP expression .

    $default  reduce using rule 40 (conditional_expression)


State 109

   41 conditional_expression: conditional_expression OR_OP expression .

    $default  reduce using rule 41 (conditional_expression)


State 110

   46 rel_expression: normal_expression LT normal_expression .
   51 normal_expression: normal_expression . PLUS term
   52                  | normal_expression . MINUS term

    PLUS   shift, and go to state 78
    MINUS  shift, and go to state 79

    $default  reduce using rule 46 (rel_expression)


State 111

   45 rel_expression: normal_expression GT normal_expression .
   51 normal_expression: normal_expression . PLUS term
   52                  | normal_expression . MINUS term

    PLUS   shift, and go to state 78
    MINUS  shift, and go to state 79

    $default  reduce using rule 45 (rel_expression)


State 112

   48 rel_expression: normal_expression LE_OP normal_expression .
   51 normal_expression: normal_expression . PLUS term
   52                  | normal_expression . MINUS term

    PLUS   shift, and go to state 78
    MINUS  shift, and go to state 79

    $default  reduce using rule 48 (rel_expression)


State 113

   47 rel_expression: normal_expression GE_OP normal_expression .
   51 normal_expression: normal_expression . PLUS term
   52                  | normal_expression . MINUS term

    PLUS   shift, and go to state 78
    MINUS  shift, and go to state 79

    $default  reduce using rule 47 (rel_expression)


State 114

   49 rel_expression: normal_expression EQ_OP normal_expression .
   51 normal_expression: normal_expression . PLUS term
   52                  | normal_expression . MINUS term

    PLUS   shift, and go to state 78
    MINUS  shift, and go to state 79

    $default  reduce using rule 49 (rel_expression)


State 115

   50 rel_expression: normal_expression NE_OP normal_expression .
   51 normal_expression: normal_expression . PLUS term
   52                  | normal_expression . MINUS term

    PLUS   shift, and go to state 78
    MINUS  shift, and go to state 79

    $default  reduce using rule 50 (rel_expression)


State 116

   51 normal_expression: normal_expression PLUS term .
   54 term: term . STAR factor
   55     | term . DIVIDE factor

    STAR    shift, and go to state 80
    DIVIDE  shift, and go to state 81

    $default  reduce using rule 51 (normal_expression)


State 117

   52 normal_expression: normal_expression MINUS term .
   54 term: term . STAR factor
   55     | term . DIVIDE factor

    STAR    shift, and go to state 80
    DIVIDE  shift, and go to state 81

    $default  reduce using rule 52 (normal_expression)


State 118

   54 term: term STAR factor .

    $default  reduce using rule 54 (term)


State 119

   55 term: term DIVIDE factor .

    $default  reduce using rule 55 (term)


State 120

   40 conditional_expression: conditional_expression . AND_OP expression
   41                       | conditional_expression . OR_OP expression
   75 assignment_statement: id_arr ASSIGN conditional_expression .

    AND_OP  shift, and go to state 70
    OR_OP   shift, and go to state 71

    $default  reduce using rule 75 (assignment_statement)


State 121

   36 forexp: FOR OPEN_BRACKET assignment_statement SEMI . M assignment_statement SEMI

    $default  reduce using rule 38 (M)

    M  go to state 139


State 122

   32 ifexp: IF OPEN_BRACKET assignment_statement CLOSE_BRACKET .

    $default  reduce using rule 32 (ifexp)


State 123

   35 whileexp: WHILE M OPEN_BRACKET assignment_statement . CLOSE_BRACKET

    CLOSE_BRACKET  shift, and go to state 140


State 124

   23 switch_statement: SWITCH OPEN_BRACKET normal_expression CLOSE_BRACKET . OPEN_CURLY case_list CLOSE_CURLY

    OPEN_CURLY  shift, and go to state 141


State 125

   70 func_call: ID OPEN_BRACKET elist_super CLOSE_BRACKET .

    $default  reduce using rule 70 (func_call)


State 126

   73 elist_func_call: elist_func_call COMMA . expression

    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 11
    OPEN_BRACKET  shift, and go to state 12
    MINUS         shift, and go to state 14
    ID            shift, and go to state 16
    NUM           shift, and go to state 20
    REAL          shift, and go to state 21

    expression          go to state 142
    rel_expression      go to state 36
    normal_expression   go to state 37
    term                go to state 38
    factor              go to state 39
    unary_expression    go to state 40
    primary_expression  go to state 41
    func_call           go to state 42
    id_arr              go to state 50


State 127

   69 elist: OPEN_SQUARE expression CLOSE_SQUARE .

    $default  reduce using rule 69 (elist)


State 128

   68 elist: elist OPEN_SQUARE expression . CLOSE_SQUARE

    CLOSE_SQUARE  shift, and go to state 143


State 129

    2 function_declaration: function_head first_curly statement_list last_curly .

    $default  reduce using rule 2 (function_declaration)


State 130

   89 unit_declaration: type ID .
   90                 | type ID . OPEN_SQUARE CLOSE_SQUARE

    OPEN_SQUARE  shift, and go to state 144

    $default  reduce using rule 89 (unit_declaration)


State 131

    5 function_head: res_id OPEN_BRACKET parameter_list CLOSE_BRACKET .

    $default  reduce using rule 5 (function_head)


State 132

   87 param_decl: param_decl COMMA . unit_declaration

    INT    shift, and go to state 17
    FLOAT  shift, and go to state 18
    VOID   shift, and go to state 19

    type              go to state 99
    unit_declaration  go to state 145


State 133

   84 new_num_list: OPEN_SQUARE NUM . CLOSE_SQUARE

    CLOSE_SQUARE  shift, and go to state 146


State 134

   83 new_num_list: new_num_list OPEN_SQUARE . NUM CLOSE_SQUARE

    NUM  shift, and go to state 147


State 135

   81 id_arr_declare: ID .
   82               | ID . new_num_list

    OPEN_SQUARE  shift, and go to state 103

    $default  reduce using rule 81 (id_arr_declare)

    new_num_list  go to state 104


State 136

   91 varlist: varlist COMMA id_arr_declare .

    $default  reduce using rule 91 (varlist)


State 137

   21 selection_statement: ifexp statement ELSE N . M statement

    $default  reduce using rule 38 (M)

    M  go to state 148


State 138

   34 iteration_statement: forexp M assignment_statement M . CLOSE_BRACKET statement

    CLOSE_BRACKET  shift, and go to state 149


State 139

   36 forexp: FOR OPEN_BRACKET assignment_statement SEMI M . assignment_statement SEMI

    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 11
    OPEN_BRACKET  shift, and go to state 12
    MINUS         shift, and go to state 14
    ID            shift, and go to state 16
    NUM           shift, and go to state 20
    REAL          shift, and go to state 21

    $default  reduce using rule 77 (assignment_statement)

    conditional_expression  go to state 34
    expression              go to state 35
    rel_expression          go to state 36
    normal_expression       go to state 37
    term                    go to state 38
    factor                  go to state 39
    unary_expression        go to state 40
    primary_expression      go to state 41
    func_call               go to state 42
    assignment_statement    go to state 150
    id_arr                  go to state 45


State 140

   35 whileexp: WHILE M OPEN_BRACKET assignment_statement CLOSE_BRACKET .

    $default  reduce using rule 35 (whileexp)


State 141

   23 switch_statement: SWITCH OPEN_BRACKET normal_expression CLOSE_BRACKET OPEN_CURLY . case_list CLOSE_CURLY

    CASE  shift, and go to state 151

    case_list        go to state 152
    case_list_minor  go to state 153
    case_statement   go to state 154
    case_name        go to state 155


State 142

   73 elist_func_call: elist_func_call COMMA expression .

    $default  reduce using rule 73 (elist_func_call)


State 143

   68 elist: elist OPEN_SQUARE expression CLOSE_SQUARE .

    $default  reduce using rule 68 (elist)


State 144

   90 unit_declaration: type ID OPEN_SQUARE . CLOSE_SQUARE

    CLOSE_SQUARE  shift, and go to state 156


State 145

   87 param_decl: param_decl COMMA unit_declaration .

    $default  reduce using rule 87 (param_decl)


State 146

   84 new_num_list: OPEN_SQUARE NUM CLOSE_SQUARE .

    $default  reduce using rule 84 (new_num_list)


State 147

   83 new_num_list: new_num_list OPEN_SQUARE NUM . CLOSE_SQUARE

    CLOSE_SQUARE  shift, and go to state 157


State 148

   21 selection_statement: ifexp statement ELSE N M . statement

    FOR           shift, and go to state 5
    IF            shift, and go to state 6
    RETURN        shift, and go to state 7
    WHILE         shift, and go to state 8
    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 11
    OPEN_BRACKET  shift, and go to state 12
    OPEN_CURLY    shift, and go to state 13
    MINUS         shift, and go to state 14
    SWITCH        shift, and go to state 15
    ID            shift, and go to state 16
    INT           shift, and go to state 17
    FLOAT         shift, and go to state 18
    VOID          shift, and go to state 19
    NUM           shift, and go to state 20
    REAL          shift, and go to state 21

    $default  reduce using rule 77 (assignment_statement)

    function_declaration    go to state 22
    first_curly             go to state 23
    function_head           go to state 24
    res_id                  go to state 25
    type                    go to state 26
    statement               go to state 158
    selection_statement     go to state 28
    switch_statement        go to state 29
    ifexp                   go to state 30
    iteration_statement     go to state 31
    whileexp                go to state 32
    forexp                  go to state 33
    conditional_expression  go to state 34
    expression              go to state 35
    rel_expression          go to state 36
    normal_expression       go to state 37
    term                    go to state 38
    factor                  go to state 39
    unary_expression        go to state 40
    primary_expression      go to state 41
    func_call               go to state 42
    assignment_statement    go to state 43
    variable_declaration    go to state 44
    id_arr                  go to state 45


State 149

   34 iteration_statement: forexp M assignment_statement M CLOSE_BRACKET . statement

    FOR           shift, and go to state 5
    IF            shift, and go to state 6
    RETURN        shift, and go to state 7
    WHILE         shift, and go to state 8
    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 11
    OPEN_BRACKET  shift, and go to state 12
    OPEN_CURLY    shift, and go to state 13
    MINUS         shift, and go to state 14
    SWITCH        shift, and go to state 15
    ID            shift, and go to state 16
    INT           shift, and go to state 17
    FLOAT         shift, and go to state 18
    VOID          shift, and go to state 19
    NUM           shift, and go to state 20
    REAL          shift, and go to state 21

    $default  reduce using rule 77 (assignment_statement)

    function_declaration    go to state 22
    first_curly             go to state 23
    function_head           go to state 24
    res_id                  go to state 25
    type                    go to state 26
    statement               go to state 159
    selection_statement     go to state 28
    switch_statement        go to state 29
    ifexp                   go to state 30
    iteration_statement     go to state 31
    whileexp                go to state 32
    forexp                  go to state 33
    conditional_expression  go to state 34
    expression              go to state 35
    rel_expression          go to state 36
    normal_expression       go to state 37
    term                    go to state 38
    factor                  go to state 39
    unary_expression        go to state 40
    primary_expression      go to state 41
    func_call               go to state 42
    assignment_statement    go to state 43
    variable_declaration    go to state 44
    id_arr                  go to state 45


State 150

   36 forexp: FOR OPEN_BRACKET assignment_statement SEMI M assignment_statement . SEMI

    SEMI  shift, and go to state 160


State 151

   31 case_name: CASE .

    $default  reduce using rule 31 (case_name)


State 152

   23 switch_statement: SWITCH OPEN_BRACKET normal_expression CLOSE_BRACKET OPEN_CURLY case_list . CLOSE_CURLY

    CLOSE_CURLY  shift, and go to state 161


State 153

   24 case_list: case_list_minor . default_statement
   25          | case_list_minor .
   26 case_list_minor: case_list_minor . case_statement

    CASE     shift, and go to state 151
    DEFAULT  shift, and go to state 162

    $default  reduce using rule 25 (case_list)

    default_statement  go to state 163
    default_name       go to state 164
    case_statement     go to state 165
    case_name          go to state 155


State 154

   27 case_list_minor: case_statement .

    $default  reduce using rule 27 (case_list_minor)


State 155

   30 case_statement: case_name . normal_expression COLON N_new M statement

    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 11
    OPEN_BRACKET  shift, and go to state 12
    MINUS         shift, and go to state 14
    ID            shift, and go to state 16
    NUM           shift, and go to state 20
    REAL          shift, and go to state 21

    normal_expression   go to state 166
    term                go to state 38
    factor              go to state 39
    unary_expression    go to state 40
    primary_expression  go to state 41
    func_call           go to state 42
    id_arr              go to state 50


State 156

   90 unit_declaration: type ID OPEN_SQUARE CLOSE_SQUARE .

    $default  reduce using rule 90 (unit_declaration)


State 157

   83 new_num_list: new_num_list OPEN_SQUARE NUM CLOSE_SQUARE .

    $default  reduce using rule 83 (new_num_list)


State 158

   21 selection_statement: ifexp statement ELSE N M statement .

    $default  reduce using rule 21 (selection_statement)


State 159

   34 iteration_statement: forexp M assignment_statement M CLOSE_BRACKET statement .

    $default  reduce using rule 34 (iteration_statement)


State 160

   36 forexp: FOR OPEN_BRACKET assignment_statement SEMI M assignment_statement SEMI .

    $default  reduce using rule 36 (forexp)


State 161

   23 switch_statement: SWITCH OPEN_BRACKET normal_expression CLOSE_BRACKET OPEN_CURLY case_list CLOSE_CURLY .

    $default  reduce using rule 23 (switch_statement)


State 162

   29 default_name: DEFAULT . COLON

    COLON  shift, and go to state 167


State 163

   24 case_list: case_list_minor default_statement .

    $default  reduce using rule 24 (case_list)


State 164

   28 default_statement: default_name . statement

    FOR           shift, and go to state 5
    IF            shift, and go to state 6
    RETURN        shift, and go to state 7
    WHILE         shift, and go to state 8
    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 11
    OPEN_BRACKET  shift, and go to state 12
    OPEN_CURLY    shift, and go to state 13
    MINUS         shift, and go to state 14
    SWITCH        shift, and go to state 15
    ID            shift, and go to state 16
    INT           shift, and go to state 17
    FLOAT         shift, and go to state 18
    VOID          shift, and go to state 19
    NUM           shift, and go to state 20
    REAL          shift, and go to state 21

    $default  reduce using rule 77 (assignment_statement)

    function_declaration    go to state 22
    first_curly             go to state 23
    function_head           go to state 24
    res_id                  go to state 25
    type                    go to state 26
    statement               go to state 168
    selection_statement     go to state 28
    switch_statement        go to state 29
    ifexp                   go to state 30
    iteration_statement     go to state 31
    whileexp                go to state 32
    forexp                  go to state 33
    conditional_expression  go to state 34
    expression              go to state 35
    rel_expression          go to state 36
    normal_expression       go to state 37
    term                    go to state 38
    factor                  go to state 39
    unary_expression        go to state 40
    primary_expression      go to state 41
    func_call               go to state 42
    assignment_statement    go to state 43
    variable_declaration    go to state 44
    id_arr                  go to state 45


State 165

   26 case_list_minor: case_list_minor case_statement .

    $default  reduce using rule 26 (case_list_minor)


State 166

   30 case_statement: case_name normal_expression . COLON N_new M statement
   51 normal_expression: normal_expression . PLUS term
   52                  | normal_expression . MINUS term

    PLUS   shift, and go to state 78
    MINUS  shift, and go to state 79
    COLON  shift, and go to state 169


State 167

   29 default_name: DEFAULT COLON .

    $default  reduce using rule 29 (default_name)


State 168

   28 default_statement: default_name statement .

    $default  reduce using rule 28 (default_statement)


State 169

   30 case_statement: case_name normal_expression COLON . N_new M statement

    $default  reduce using rule 37 (N_new)

    N_new  go to state 170


State 170

   30 case_statement: case_name normal_expression COLON N_new . M statement

    $default  reduce using rule 38 (M)

    M  go to state 171


State 171

   30 case_statement: case_name normal_expression COLON N_new M . statement

    FOR           shift, and go to state 5
    IF            shift, and go to state 6
    RETURN        shift, and go to state 7
    WHILE         shift, and go to state 8
    INC_OP        shift, and go to state 9
    DEC_OP        shift, and go to state 10
    NOT           shift, and go to state 11
    OPEN_BRACKET  shift, and go to state 12
    OPEN_CURLY    shift, and go to state 13
    MINUS         shift, and go to state 14
    SWITCH        shift, and go to state 15
    ID            shift, and go to state 16
    INT           shift, and go to state 17
    FLOAT         shift, and go to state 18
    VOID          shift, and go to state 19
    NUM           shift, and go to state 20
    REAL          shift, and go to state 21

    $default  reduce using rule 77 (assignment_statement)

    function_declaration    go to state 22
    first_curly             go to state 23
    function_head           go to state 24
    res_id                  go to state 25
    type                    go to state 26
    statement               go to state 172
    selection_statement     go to state 28
    switch_statement        go to state 29
    ifexp                   go to state 30
    iteration_statement     go to state 31
    whileexp                go to state 32
    forexp                  go to state 33
    conditional_expression  go to state 34
    expression              go to state 35
    rel_expression          go to state 36
    normal_expression       go to state 37
    term                    go to state 38
    factor                  go to state 39
    unary_expression        go to state 40
    primary_expression      go to state 41
    func_call               go to state 42
    assignment_statement    go to state 43
    variable_declaration    go to state 44
    id_arr                  go to state 45


State 172

   30 case_statement: case_name normal_expression COLON N_new M statement .

    $default  reduce using rule 30 (case_statement)
